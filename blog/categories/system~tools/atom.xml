<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: System~tools | kk Blog —— 通用基础]]></title>
  <link href="http://abcdxyzk.github.io/blog/categories/system~tools/atom.xml" rel="self"/>
  <link href="http://abcdxyzk.github.io/"/>
  <updated>2014-11-19T18:45:45+08:00</updated>
  <id>http://abcdxyzk.github.io/</id>
  <author>
    <name><![CDATA[kk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[修改elf文件标记的源码路径debugedit，find-debuginfo]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/11/03/tools-edit-source-dir/"/>
    <updated>2014-11-03T18:10:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/11/03/tools-edit-source-dir</id>
    <content type="html"><![CDATA[<pre><code>    yum install rpm-build
    sudo apt-get install rpm
</code></pre>

<p>/usr/lib/rpm/debugedit 用来改变源码查找路径。
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ /usr/lib/rpm/debugedit
</span><span class='line'>Usage: debugedit [OPTION&hellip;]
</span><span class='line'>  -b, &ndash;base-dir=STRING      base build directory of objects
</span><span class='line'>  -d, &ndash;dest-dir=STRING      directory to rewrite base-dir into
</span><span class='line'>  -l, &ndash;list-file=STRING     file where to put list of source and header file
</span><span class='line'>                         names
</span><span class='line'>  -i, &ndash;build-id             recompute build ID note and print ID on stdout&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;Help options:
</span><span class='line'>  -?, --help                 Show this help message
</span><span class='line'>  --usage                    Display brief usage message
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;base-dir 长度要大等于 dest-dir  
</span><span class='line'>-i 输出build-id  
</span><span class='line'>-l 输出源编译文件位置，便于有需要的人打包
</span><span class='line'>
</span><span class='line'>--------
</span><span class='line'>
</span><span class='line'>.debug_str段保存着所有全局变量的名字，以0x00作为每一个全局变量名的结束。  
</span><span class='line'>在其它段来调用名字时，是以其在.debug_str段的偏移量来实现的  
</span><span class='line'>gcc -g /root/Desktop/a.c -o /root/Desktop/a.out  
</span><span class='line'>用绝对路径编译，在.debug_str段中就会存下源文件路径，.debug_info的DW_TAG_compile_unit中的DW_AT_name对应.debug_str中的偏移。  
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;$ objdump &ndash;dwarf=str a.out
</span><span class='line'>&hellip;.
</span><span class='line'>  0x00000000 474e5520 4320342e 342e3720 32303132 GNU C 4.4.7 2012
</span><span class='line'>  0x00000010 30333133 20285265 64204861 7420342e 0313 (Red Hat 4.
</span><span class='line'>  0x00000020 342e372d 3429006c 6f6e6720 756e7369 4.7-4).long unsi
</span><span class='line'>  0x00000030 676e6564 20696e74 002f726f 6f742f44 gned int.&lt;span style="color:red"&gt;/root/D&lt;/span&gt;
</span><span class='line'>  0x00000040 65736b74 6f702f61 2e630075 6e736967 esktop/a.c.unsig
</span><span class='line'>  0x00000050 6e656420 63686172 006d6169 6e006c6f ned char.main.lo
</span><span class='line'>  0x00000060 6e672069 6e74002f 726f6f74 2f446573 ng int./root/Des
</span><span class='line'>  0x00000070 6b746f70 0073686f 72742075 6e736967 ktop.short unsig
</span><span class='line'>  0x00000080 6e656420 696e7400 73686f72 7420696e ned int.short in
</span><span class='line'>  0x00000090 7400                                t.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;$ objdump &ndash;dwarf=info a.out
</span><span class='line'>&hellip;..
</span><span class='line'> &lt;0&gt;&lt;b&gt;: Abbrev Number: 1 (DW_TAG_compile_unit)
</span><span class='line'>&lt; c&gt;   DW_AT_producer    : (indirect string, offset: 0x0): GNU C 4.4.7 20120313 (Red Hat 4.4.7-4)
</span><span class='line'>&lt;10&gt;   DW_AT_language    : 1        (ANSI C)
</span><span class='line'>&lt;11&gt;   DW_AT_name        : (indirect string, offset: 0x39): /root/Desktop/a.c
</span><span class='line'>&lt;15&gt;   DW_AT_comp_dir    : (indirect string, offset: 0x67): /root/Desktop
</span><span class='line'>&lt;19&gt;   DW_AT_low_pc      : 0x4004c4
</span><span class='line'>&lt;21&gt;   DW_AT_high_pc     : 0x40051c
</span><span class='line'>&lt;29&gt;   DW_AT_stmt_list   : 0x0&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;-----------------------------------------
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;$ /usr/lib/rpm/debugedit -b /root/Desktop -d /usr/src /root/Desktop/a.out</span></code></pre></td></tr></table></div></figure></p>

<hr />

<pre><code>$ objdump --dwarf=str a.out
...
  0x00000000 474e5520 4320342e 342e3720 32303132 GNU C 4.4.7 2012
  0x00000010 30333133 20285265 64204861 7420342e 0313 (Red Hat 4.
  0x00000020 342e372d 3429006c 6f6e6720 756e7369 4.7-4).long unsi
  0x00000030 676e6564 20696e74 002f7573 722f7372 gned int./usr/sr
  0x00000040 632f612e 63002f61 2e630075 6e736967 c/a.c./a.c.unsig
  0x00000050 6e656420 63686172 006d6169 6e006c6f ned char.main.lo
  0x00000060 6e672069 6e74002f 726f6f74 2f446573 ng int./root/Des
  0x00000070 6b746f70 0073686f 72742075 6e736967 ktop.short unsig
  0x00000080 6e656420 696e7400 73686f72 7420696e ned int.short in
  0x00000090 7400                                t.


$ objdump --dwarf=info a.out

...
 &lt;0&gt;&lt;b&gt;: Abbrev Number: 1 (DW_TAG_compile_unit)
    &lt; c&gt;   DW_AT_producer    : (indirect string, offset: 0x0): GNU C 4.4.7 20120313 (Red Hat 4.4.7-4)
    &lt;10&gt;   DW_AT_language    : 1        (ANSI C)
    &lt;11&gt;   DW_AT_name        : (indirect string, offset: 0x39): /usr/src/a.c
    &lt;15&gt;   DW_AT_comp_dir    : (indirect string, offset: 0x67): /root/Desktop
    &lt;19&gt;   DW_AT_low_pc      : 0x4004c4
    &lt;21&gt;   DW_AT_high_pc     : 0x40051c
    &lt;29&gt;   DW_AT_stmt_list   : 0x0
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Screen]]></title>
    <link href="http://abcdxyzk.github.io/blog/2012/02/18/tools-screen/"/>
    <updated>2012-02-18T12:53:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2012/02/18/tools-screen</id>
    <content type="html"><![CDATA[<h4>断开控制台而不结束会话-Screen</h4>

<p>设想一下，你通过 ssh 连接到了一台服务器，接着你开始编译一个软件。这或许要占用你一个小时甚至更多的时间，突然！你需要离开，或者是断开网络了~<br/>
怎么办？下次再重新编译一次么？还有例外一种办法~（当然，我指的不是一开始放在后台运行。）<br/>
Screen！</p>

<h4>一、启动 Screen</h4>

<p>启动 Screen 再简单不过了，在 Shell 中运行 screen ，按回车，就进入 Screen 输入环境了。</p>

<h4>二、给 Screen 的指令</h4>

<p>和VIM类似，当你想给 Screen 发送指令，而不是给 shell 输入指令的时候需要用到特定的组合键：Ctrl-A 。（这类似于 VIM 中的 ESC。）当你执行Ctrl-A 后就可以引起 Screen 的注意了。</p>

<h4>三、我在 Screen 中么？</h4>

<p>通过 screen -list 调用 screen 可以看到类似如下界面：<br/>
这标明你正处于 Screen 中。并且进程号是8941。</p>

<h4>四、还有哪些命令？</h4>

<p>通过 Ctrl-A and ? 的方式你可以看到如下列表：<br/>
ok！一切都明了了！</p>

<h4>五、离开</h4>

<p>这时我需要离开那台正在编译软件的主机了，通过 Ctrl+A and D。我们脱离了 screen。但是 screen 依然在后台运行着。</p>

<h4>六、归来</h4>

<p>当你回到这台主机，并想重新进入之前的 screen 时，以前看到的 进程号（PID）就要发挥作用了。<br/>
通过命令：<br/>
screen -r pid<br/>
就可以回到之前的Screen了。<br/>
如果你觉得记住 PID 是一件很麻烦的事情，也可以使用 -S 参数：<br/>
scree  -S latteye<br/>
这样就可以打开一个名为 latteye 的会话，下次连接时使用：<br/>
screen -r latteye <br/>
即可。</p>

<h4>七、特殊情况</h4>

<p>有些时候我们离开 screen 并不是那么正常，不一定会按 Ctrl-a + D 来离开 Screen，比如网络突然断开的时候。<br/>
这个时候，若我们重新回到主机，则通过 -r 参数是无法连接 screen 的，我们还需要 -d 的帮助：<br/>
screen -d -r pid</p>

<hr />

<p>命令其实超简单的：<br/>
直接在终端上输入 screen , 这个时候，服务器端会启一个新的终端，但这个终端，与之前的普通终端不一样，它不隶属于 sshd 进程组，这样，当本地终端关闭后，服务器终端不会被 kill。<br/>
当然，优点还不止这么些，在服务器终端里执行任务时，你甚至可以随时地切换到本地终端做些其他事情，然后，要回去时，再恢复到刚才已经打开的服务器终端里，如果刚才的任务没有结束，还可以继续执行任务。<br/>
操作步骤：<br/>
首先，进入 screen -S sessionname终端。(sessionname是为了区分你的session)<br/>
然后按 ctrl + a，再按 d键暂时退出终端。<br/>
当要返回时， 先查看刚才的终端进程ID， screen -list<br/>
或直接<br/>
 screen -r xx(刚才的sessionname)就可以了 <br/>
当然，当你开了很多个session后，打算关闭几个session，可以进入到session后，exit一下就可以了.<br/>
<code>
    Ctrl + a + ?    显示所有键绑定信息
    Ctrl + a + w    显示所有窗口列表
    Ctrl + a + a    切换到之前显示的窗口
    Ctrl + a + c    创建一个新的运行shell的窗口并切换到该窗口
    Ctrl + a + n    切换到下一个窗口
    Ctrl + a + p    切换到前一个窗口(与C-a n相对)
    Ctrl + a + 0..9 切换到窗口0..9
    Ctrl + a + a    发送 C-a到当前窗口
    Ctrl + a + d    暂时断开screen会话
    Ctrl + a + k    杀掉当前窗口
    Ctrl + a + [    进入拷贝/回滚模式
</code></p>
]]></content>
  </entry>
  
</feed>
