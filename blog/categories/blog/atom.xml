<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Blog | kk Blog]]></title>
  <link href="http://abcdxyzk.github.io/blog/categories/blog/atom.xml" rel="self"/>
  <link href="http://abcdxyzk.github.io/"/>
  <updated>2014-11-17T02:10:55+08:00</updated>
  <id>http://abcdxyzk.github.io/</id>
  <author>
    <name><![CDATA[kk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress分类中使用二级目录]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/11/13/octopressfen-lei-zhong-shi-yong-er-ji-mu-lu/"/>
    <updated>2014-11-13T23:49:25+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/11/13/octopressfen-lei-zhong-shi-yong-er-ji-mu-lu</id>
    <content type="html"><![CDATA[<h4>1.修改plugins/category_list_tag.rb为</h4>

<pre><code>    # encoding: UTF-8
    module Jekyll
        class CategoryListTag &lt; Liquid::Tag
            def render(context)
                html = ""
                pre = ""
                divout = 0
                categories = context.registers[:site].categories.keys
                categories.sort.each do |category|
                    posts_in_category = context.registers[:site].categories[category].size
                    category_dir = context.registers[:site].config['category_dir']
                    cats = category.split(/~/)
                    if cats.size &gt; 1 and cats[0] == pre
                        if divout == 0
                            html &lt;&lt; "&lt;div id='#{pre}' class='divclass'&gt;"
                            divout = 1
                        end
                        html &lt;&lt; "&lt;li&gt;&lt;a href='http://abcdxyzk.github.io/#{category_dir}/#{category.to_url}/?opendiv=#{pre}'&gt;#{cats[1]} (#{posts_in_category})&lt;/a&gt;&lt;/li&gt;\n"
                    else
                        pre = cats[0]
                        if divout &gt; 0
                            html &lt;&lt; "&lt;/div&gt;"
                            divout = 0
                        end
                        html &lt;&lt; "&lt;li class='category'&gt;&lt;a href='##' onmousedown=showDiv('#{pre}')&gt;#{category} &lt;/a&gt;&lt;a href='http://abcdxyzk.github.io/#{category_dir}/#{category.to_url}/'&gt;(#{posts_in_category})&lt;/a&gt;&lt;/li&gt;\n"
                    end
                end
                if divout &gt; 0
                    html &lt;&lt; "&lt;/div&gt;"
                    divout = 0
                end
                html
            end
        end
    end

    Liquid::Template.register_tag('category_list', Jekyll::CategoryListTag)
</code></pre>

<h4>2.修改source/_includes/custom/asides/category_list.html为：注意去掉’\‘</h4>

<pre><code>    &lt;section&gt;
    &lt;h1&gt;Categories&lt;/h1&gt;
    &lt;head&gt;
    &lt;style type="text/css"&gt;

    .divclass
    {
        display:none;
        font-size:12px;
        position:relative;
        left:0px;
        top:0px;
        padding:0px 30px 0px 30px;
    }
    &lt;/style&gt;
    &lt;script language="javascript" type="text/javascript"&gt;

    function showDiv(divName)
    {
        if (document.getElementById(divName).style.display == "block")
            document.getElementById(divName).style.display = "none"; //隐藏层
        else
            document.getElementById(divName).style.display = "block"; //显示层
    }

    function GetRequest(name) {
        var url = location.search; //获取url中"?"符后的字串
        if (url.indexOf("?") != -1) {
            var str = url.substr(1);
            strs = str.split("&amp;");
            for(var i = 0; i &lt; strs.length; i ++) {
                if (name == strs[i].split("=")[0])
                return unescape(strs[i].split("=")[1]);
            }
        }
        return null;
    }
    &lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
    &lt;div id="menu"&gt;
    &lt;ul&gt;
    {\% category_list \%}
    &lt;/ul&gt;
    &lt;/div&gt;
    &lt;/body&gt;
    &lt;/html&gt;

    &lt;script language="javascript" type="text/javascript"&gt;
    var divname = GetRequest("opendiv");
    if (divname != null)
        showDiv(divname)
    &lt;/script&gt;
    &lt;/section&gt;
</code></pre>

<h4>3.使用二级标签的时候先写一个一级标签，写一个一级~二级标签，例如：</h4>

<pre><code> categories:
 - hello
 - hello~hi
</code></pre>

<h4>4.add</h4>

<h5>后来又改成了三级目录，显示调整，单列时间分类等。具体去看源码对应文件。</h5>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress侧边栏添加内容]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/11/13/octopressce-bian-lan-tian-jia-nei-rong/"/>
    <updated>2014-11-13T23:21:52+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/11/13/octopressce-bian-lan-tian-jia-nei-rong</id>
    <content type="html"><![CDATA[<h4>1.添加about页面</h4>

<p>rake new_page[about]<br/>
会生成 source/about/index.markdown 文件。<br/>
编辑该文件的内容。<br/>
然后在头部导航菜单中添加页面的超链接。具体做法是编辑 /source/_includes/custom/navigation.html 文件。</p>

<h4>2.增加链接</h4>

<p>在source/_includes/custom/asides创建blog_link.html，代码如下：<br/>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;section&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;link&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;ul&gt;
</span><span class='line'>        &lt;li&gt;
</span><span class='line'>                &lt;a href=http://hi.baidu.com/abcdxyzk target=_blank&gt;My&lt;/a&gt;
</span><span class='line'>        &lt;/li&gt;
</span><span class='line'>&lt;/ul&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;/section&gt;</span></code></pre></td></tr></table></div></figure>
然后修改_config.yml文件在default_asides中加入custom/asides/blog_link.html。</p>

<h4>3.支持评论</h4>

<p>Octopress自身不支持评论功能，不过我们可以使用第三方的评论系统，国外的有Disqus。下面介绍怎样在Octopress中使用Disqus。<br/>
首先需要在Disqus注册一个账号，登录后点击Add Disqus to your site，然后添加站点信息site name和url，记下右侧的name<br/>
然后在_config.yml文件中进行下面设置<br/>
<code>
    # Disqus Comments
    disqus_short_name: 为添加站点信息时的name
    disqus_show_comment_count: true
</code></p>

<h4>4.添加Categories侧边栏</h4>

<p>增加category_list插件<br/>
保存到 plugins/category_list_tag.rb：<br/>
<code>
    # encoding: UTF-8
        module Jekyll
                class CategoryListTag &lt; Liquid::Tag
                        def render(context)
                                html = ""
                                categories = context.registers[:site].categories.keys
                                categories.sort.each do |category|
                                        posts_in_category = context.registers[:site].categories[category].size
                                        category_dir = context.registers[:site].config['category_dir']
                                        html &lt;&lt; "&lt;li class='category'&gt;&lt;a href='http://abcdxyzk.github.io/#{category_dir}/#{category.to_url}/'&gt;#{category} (#{posts_in_category})&lt;/a&gt;&lt;/li&gt;\n"
                                end
                                html
                        end
                end
        end
    Liquid::Template.register_tag('category_list', Jekyll::CategoryListTag)
</code></p>

<p>注意：一定要在文件的开始添加# encoding: UTF-8这一行，否则无法支持中文分类。<br/>
增加aside<br/>
保存到 source/<em>includes/asides/category_list.html：注意去掉&#8217;\&lsquo;<br/>
<code>
    &lt;section&gt;
        &lt;h1&gt;Categories&lt;/h1&gt;
        &lt;ul id="categories"&gt;
            {\% category_list \%}
        &lt;/ul&gt;
    &lt;/section&gt;
</code>
修改</em>config.yml文件<br/>
将category_list添加到default_asides：<br/>
   default_asides: [asides/category_list.html, asides/recent_posts.html]<br/>
安装这个插件后直接可以支持中文分类，url中使用的是分类的拼音，如「数据库」对应「shu-ju-ku」。如果使用中文分类时遇到各种错误，请参考下面这两篇文章：</p>

<pre><code>http://aiku.me/bar/10393365  
http://blog.sprabbit.com/blog/2012/03/23/octopress/  
</code></pre>

<h4>5.添加tag</h4>

<p>首先到<a href="https://github.com/robbyedwards/octopress-tag-pages  ">https://github.com/robbyedwards/octopress-tag-pages  </a>
和<a href="https://github.com/robbyedwards/octopress-tag-cloudclone  ">https://github.com/robbyedwards/octopress-tag-cloudclone  </a>
这两个项目的代码。这两个项目分别用于产生tag page和tag cloud。 针对这两个插件，需要手工复制一些文件到你的octopress目录。</p>

<p>octopress-tag-pages<br/>
复制tag_generator.rb到plugins目录；<br/>
复制tag_index.html到source/<em>layouts目录。<br/>
复制tag_feed.xml到source/</em>includes/custom/目录。tag_feed.xml文件中 layout: nil 改为 layout: null<br/>
其他文件就不需要复制了，都是些例子。</p>

<p>octopress-tag-cloud<br/>
仅复制tag_cloud.rb到plugins目录即可。<br/>
添加aside，复制以下代码到source/<em>includes/custom/asides/tags.html。注意去掉&#8217;\&lsquo;<br/>
<code>
    &lt;section&gt;
        &lt;h1&gt;Tags&lt;/h1&gt;
        &lt;ul class="tag-cloud"&gt;
            {\% tag_cloud font-size: 90-210%, limit: 100, style: para \%}
        &lt;/ul&gt;
    &lt;/section&gt;
</code>
tag_cloud的参数中，style :para指定不使用li来分割，limit限定100个tag，font-size指定tag的大小范围，具体参数参看官方文档。<br/>
最后，当然是在</em>config.xml的default_asides 中添加这个tag cloud到导航栏：<br/>
<code>
default_asides: [... custom/asides/tags.html, ...]
</code></p>

<h5>bug:</h5>

<p>除0错误，tag_cloud.rb中<br/>
weight = (Math.log(count) - Math.log(min))/(Math.log(max) - Math.log(min))<br/>
当max==min时出错<br/>
一下修复同时改成像Categories一样显示文章数<br/>
<code>
--- a/plugins/tag_cloud.rb
+++ b/plugins/tag_cloud.rb
@@ -54,7 +54,7 @@ def initialize(name, params, tokens)
 # map: [[tag name, tag count]] -&gt; [[tag name, tag weight]]
        weighted = count.map do |name, count|
 # logarithmic distribution
-       weight = (Math.log(count) - Math.log(min))/(Math.log(max) - Math.log(min))
+       weight = count
        [name, weight]
        end
 # get the top @limit tag pairs when a limit is given, unless the sort method is random
@@ -92,12 +92,17 @@ def initialize(name, params, tokens)
        html = ""
 # iterate over the weighted tag Array and create the tag items
        weighted.each_with_index do |tag, i|
-       name, weight = tag
+       name, weight_orig = tag
+        if min == max
+               weight = 0.5
+       else
+               weight = (Math.log(weight_orig) - Math.log(min))/(Math.log(max) - Math.log(min))
+       end
        size = size_min + ((size_max - size_min) * weight).to_f
        size = sprintf("%.#{@precision}f", size)
        slug = name.to_url
        @separator = "" if i == (weighted.size - 1)
-       html &lt;&lt; "#{@tag_before}&lt;a style=\"font-size: #{size}#{unit}\" href=\"/#{dir}/#{slug}/\"&gt;#{name}&lt;/a&gt;#{@separator}#{@tag_after}\n"
+       html &lt;&lt; "#{@tag_before}&lt;a style=\"font-size: #{size}#{unit}\" href=\"/#{dir}/#{slug}/\"&gt;#{name}(#{weight_orig})&lt;/a&gt;#{@separator}#
        end
        html
        end
</code></p>

<h6>如果会出现:</h6>

<p>添加超过一个tags之后，rake generate就会开始报错了： Error :Liquid Exception: comparison of Array with Array failed in page<br/>
只需要将1个tag重复2次以上使用就可以解决。<br/>
1.第1个post加的tag是：tag1，第2个post加的tag是：tag1<br/>
2.rake generate<br/>
3.第2个post的tag随便改：tagXXX</p>

<h4>6.近期评论</h4>

<p>复制以下代码到source/_includes/custom/asides/recent_comments.html，名字改成自己的<br/>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;section id="comment_sidebar"&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;近期评论&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;script type="text/javascript" src="http://abcdxyzk.disqus.com/recent_comments_widget.js?num_items=10&hide_avatars=0&avatar_size=32&excerpt_length=20"&gt;&lt;/script&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;a href="http://disqus.com/"&gt;Powered by Disqus&lt;/a&gt;
</span><span class='line'>&lt;/section&gt;
</span><span class='line'>&lt;code&gt;
</span><span class='line'>修改_config.yml  
</span><span class='line'>最后，当然是在_config.xml的default_asides 中添加这个tag cloud到导航栏：  
</span><span class='line'>&lt;/code&gt;
</span><span class='line'>default_asides: [&hellip; custom/asides/recent_comments.html, &hellip;]</span></code></pre></td></tr></table></div></figure></p>

<h4>7.优化</h4>

<p>删除<br/>
 source/<em>includes/custom/head.html<br/>
 source/</em>includes/head.html<br/>
中googleapis</p>

<h4>8.BUG，最新octopress的已经修复</h4>

<p>除了根目录，其他目录无法将右侧缩到底部。<br/>
可以修改一下source/_includes/head.html文件，去掉src中的&#8217;.&lsquo;，改成如下：<br/>
<code>
  &lt;script&gt;!window.jQuery &amp;&amp; document.write(unescape('%3Cscript src="http://abcdxyzk.github.io/javascripts/libs/jquery.min.js"%3E%3C/script%3E'))&lt;/script&gt;
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress+github建立个人博客]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/11/13/octopress-plus-githubjian-li-ge-ren-bo-ke/"/>
    <updated>2014-11-13T22:59:03+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/11/13/octopress-plus-githubjian-li-ge-ren-bo-ke</id>
    <content type="html"><![CDATA[<h4>Step 1 安装git ruby nodejs</h4>

<pre><code>    sudo apt-get install git zlib1g-dev libyaml-dev openssl libssl-dev tcl-dev tk-dev node/nodejs
    sudo apt-get install ruby ruby-dev 安装的版本偏低不行，要1.9.3以上https://www.ruby-lang.org/en/downloads/
</code></pre>

<h4>Step 2 准备octopress</h4>

<pre><code>    git clone git://github.com/imathis/octopress.git octopress
    cd octopress    # 如果你使用RVM, 你会被询问你是否信任 .rvmrc 文件 (选择 yes).
    ruby --version  # 这条命令应该输出 Ruby 1.9.3
    然后安装依赖
    sudo gem install bundler
    rbenv rehash    # 如果你使用 rbenv, 执行 rehash 以运行 bundle 命令 (好像不需要这条)
    bundle install    # 在octopress目录运行
    最后安装默认主题
    rake install
</code></pre>

<h4>Step 3 部署到github上</h4>

<p>(1)以 用户名/用户名.github.io 的格式建立一个新项目。<br/>
(2)部署<br/>
首先运行<br/>
rake setup_github_pages<br/>
这条命令会询问你刚才建立的项目的地址，按提示输入，然后就会生成一些用于部署的文件和<em>deploy目录，</em>deploy目录就是对应master分支。 接着执行<br/>
<code>
    rake generate
    rake deploy  # 会cd到_deploy目录运行 commit 和 push
</code>
这两条命令会生成博客内容，然后添加到git中，自动执行git commit然后推送到主分支(master branch)。几分钟后，你会收到github通知你你的提交已经被接受并发布了你的网站的email。</p>

<p>rake generate可能报错：<br/>
<code>
    Error reading file /var/lib/gems/1.9.1/gems/jekyll-sitemap-0.6.1/lib/sitemap.xml: No such file or directory - /home/kk/kk/github/octopress/source/var/lib/gems/1.9.1/gems/jekyll-sitemap-0.6.1/lib/sitemap.xml
</code>
是jekyll-sitemap-0.6.1的bug，修改Gemfile.lock, jekyll-sitemap (0.6.1) 改成 jekyll-sitemap (0.6.3), 再<br/>
<code>
    bundle install
</code></p>

<p>不要忘记把为你的博客提交source（Don’t forget to commit the source for your blog）<br/>
<code>
    git add .
    git commit -m 'your message'
    git push origin source # 记住只push source，要push master就得先pull一下，因为_deploy目录也对应master，而他一运行rake deploy就会push
</code></p>

<h4>Step 4 发布博客</h4>

<p>你发布的文章被放在source/<em>posts目录下，并按照Jekyll的命名规则命名：YYYY-MM-DD-post- title.markdown。这个名字会被用于生成url且日期会被用于为文章按时间排序。 但这样比较麻烦，于是Octopress提供了一个rake task来自动按照正确的命名规则建立博文，并生成基本内容。<br/>
格式是：rake new_post[&ldquo;title&rdquo;]<br/>
样例：<br/>
    rake new_post[&ldquo;tt&rdquo;]<br/>
    # 这条命令会创建 source/</em>posts/2011-07-03-tt.markdown文件<br/>
会生成如下内容的文件：<br/>
<code>
    ---
    layout: post
    title: "tt"
    date: 2011-07-03 5:59
    comments: true
    external-url:
    categories:
    ---
</code>
你可以在这里设置评论功能开关，设置分类。如果你的博客有多个作者共用，你可以在文件中添加【author:Your Name】。如果你在编辑一个草稿，你可以添加【published： false】以使其在生成博客内容时被自动忽略。</p>

<h4>Step 5 生成 &amp; 预览</h4>

<p>rake generate # 在公开目录中生成博文和页面
rake watch # 查看 source/ and sass/ 的改动
rake preview # 在浏览器中输入 <a href="http://localhost:4000">http://localhost:4000</a> 即可预览。</p>

<h4>Step 6 推送到github</h4>

<p>rake deploy
然后过几分钟，github就会自动更新你的博客了。<br/>
注意：执行rake deploy前一定要先rake generate一下<br/>
不要忘记把为你的博客提交source（Don’t forget to commit the source for your blog）<br/>
&#8220;`
    git add .
    git commit -m &lsquo;your message&rsquo;
    git push origin source</p>

<pre><code>-----------------------------------

#### 另一台机子的时候
安装需要软件，然后clone自己的代码库  
</code></pre>

<pre><code>git checkout -b source origin/source
sudo gem install bundler
bundle install
rake install
rake setup_github_pages
mkdir _deploy
cd _deploy
git init
git remote add origin git@github.com:abcdxyzk/abcdxyzk.github.io.git
git pull origin master
cd ..
</code></pre>

<pre><code>_deploy目录就是对应master分支，所以必须要先保持一致  
不然先运行rake deploy会在_deploy目录先commit，再push，这就会导致其他和另外机子上提交的冲突。  
如果先rake deploy的话，可以在_deploy目录reset回去，然后pull。  

记住多台机子操作的时候一开始先
</code></pre>

<pre><code>需要保持_deploy/.git/config有master分支
git pull
cd _deploy
git pull
</code></pre>

<p>&#8220;`</p>
]]></content>
  </entry>
  
</feed>
