<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 2014 | kk Blog —— 通用基础]]></title>
  <link href="http://abcdxyzk.github.io/blog/categories/2014/atom.xml" rel="self"/>
  <link href="http://abcdxyzk.github.io/"/>
  <updated>2014-11-22T01:36:23+08:00</updated>
  <id>http://abcdxyzk.github.io/</id>
  <author>
    <name><![CDATA[kk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[octopress 加站长统计和站内搜索]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/11/20/octopress-4/"/>
    <updated>2014-11-20T18:00:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/11/20/octopress-4</id>
    <content type="html"><![CDATA[<h4>站长统计</h4>

<p>国内使用很广的CNZZ了，注册后，添加并验证你的网站就可以添加统计代码了，选好自己喜欢的样式，获得代码，可添加到source/_includes/custom/footer.html中。即可查看每天你的博客的流量
<code>
    &lt;script type="text/javascript"&gt;var cnzz_protocol = (("https:" == document.location.protocol) ? " https://" : " http://");document.write(unescape("%3Cspan id='cnzz_stat_icon_1253604690'%3E%3C/span%3E%3Cscript src='" + cnzz_protocol + "s95.cnzz.com/z_stat.php%3Fid%3D1253604690' type='text/javascript'%3E%3C/script%3E"));&lt;/script&gt;
</code></p>

<h4>站内搜索</h4>

<p>为了实现站内搜索(页面不跳转)，</p>

<!--more-->


<h5>需要到tapirgo.com注册你的站点，填入atom.xml的url和邮箱地址，tapirgo会生成一对token，我们只使用public token就够了。</h5>

<h5>打开_config.yml文件，加入tapir_token: your_token</h5>

<h5>修改simple_search为你的站点域名simple_search: your_domain</h5>

<h5>在source/javascripts/新建jquery-tapir.js，内容为</h5>

<pre><code>    (function($){
      var el;
      var settings = {};

      var methods = {
        init: function(options) {
          el = this;

          settings = {
                   token: false,
                   query_param: 'query'
                 };

          if (options) {
        $.extend(settings, options);
          }

          if (!settings.token || settings.query_param == '') {
        return this;
          }

          $.getJSON(
        'http://tapirgo.com/api/1/search.json?token=' + settings.token + '&amp;query=' + paramValue(settings.query_param) + '&amp;callback=?', function(data){
          if(settings['complete']) { settings.complete() }
          $.each(data, function(key, val) {
          document.getElementById('search_results').style.display="block";
          document.getElementById('search_results').style.height="100%";
          document.getElementById('search_results').style.overflow="hidden";
              var str1 = val.content;
              var str2 = str1.substr(1, 250);
              str2 = str2.substr(0, Math.min(str2.length, str2.lastIndexOf(" ")));
            el.append('&lt;div id="content" class="inner"&gt;&lt;article class="post"&gt;&lt;h2 class="title"&gt;&lt;a href="' + val.link + '"&gt;' + val.title + '&lt;/a&gt;&lt;/h2&gt;&lt;div class="entry-content"&gt;&lt;div class="date"&gt;Published on: ' + (val.published_on).substr(0,10) + '&lt;/div&gt;&lt;/div&gt;&lt;br&gt;&lt;p&gt;' + str2 + '...&lt;/p&gt;&lt;br&gt;&lt;a href="' + val.link +'"&gt;Read on &amp;rarr;&lt;/a&gt;&lt;/article&gt;&lt;/div&gt;');
            if(key &gt;= (data.length-1)){
                el.append('&lt;div id="content" class="inner"&gt;&lt;center&gt;&lt;h2 style="border-bottom: 1px solid #ddd;"&gt;Result ends&lt;/h2&gt;&lt;/center&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;');
            }
          });
        }
          );

          return this;
        }
      };

      // Extract the param value from the URL.
      function paramValue(query_param) {
        var results = new RegExp('[\\?&amp;]' + query_param + '=([^&amp;#]*)').exec(window.location.href);
        return results ? results[1] : false;
      }

      $.fn.tapir = function(method) {
        if (methods[method]) {
          return methods[ method ].apply(this, Array.prototype.slice.call(arguments, 1));
        } else if (typeof method === 'object' || ! method) {
          return methods.init.apply(this, arguments);
        } else {
          $.error('Method ' +  method + ' does not exist on jQuery.tapir');
        }
      };

    })( jQuery );
</code></pre>

<h5>然后在source/search/index.html中</h5>

<pre><code>---
    layout: default
    ---
    &lt;h1 class="entry-title"&gt;&lt;center&gt;Search Results&lt;/center&gt;&lt;/h1&gt;
    &lt;div id="search_loading" style="margin: 40px 0"&gt;
        &lt;center&gt;&lt;img src="http://abcdxyzk.github.io/images/loading.gif"&gt;&lt;/center&gt;
    &lt;/div&gt;

    &lt;script type="text/javascript" src="http://abcdxyzk.github.io/javascripts/jquery-tapir.js"&gt;&lt;/script&gt;
    &lt;div id="search_results" style="display:none"&gt;
    &lt;br&gt;
    &lt;/div&gt;
    &lt;script&gt;
         $('#search_results').tapir({
             'token': 'your_token',
             'complete' : function() { document.getElementById('search_loading').style.display="none"; }
         });
    &lt;/script&gt;
</code></pre>

<h5>更新source/_includes/navigation.html</h5>

<p>将原来的google搜索
<code>
    &lt;input type="hidden" name="q" value="site:smarterhjw.com" /&gt;
    &lt;input class="search" type="text" name="q" results="0" placeholder="Search"/&gt;
</code>
更改为
<code>
    &lt;input class="search" name="query" type="text" placeholder="Search..." x-webkit-speech /&gt;
</code>
最后rake generate，就可以了。 此时进行搜索，就不会再跳转到站外去了。</p>

<h5>可以修改一下搜索框展示</h5>

<pre><code>    --- a/sass/partials/_navigation.scss
    +++ b/sass/partials/_navigation.scss
    @@ -74,6 +74,7 @@ body &gt; nav {
           float: right;
           text-align: left;
           padding-left: .8em;
    +      padding-top: .35em;
           width: $sidebar-width-medium - $pad-medium*2 - $sidebar-pad-medium + 20px;
           .search {
         width: 93%;
    @@ -86,7 +87,7 @@ body &gt; nav {
           .search { width: 91%; }
         }
         fieldset.mobile-nav { display: none; }
    -    fieldset[role=search]{ width: 99%; }
    +    fieldset[role=search]{ width: 80%; }
       }
       @media only screen and (min-width: 992px) {
         form {
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[markdown部分语法]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/11/17/blog-markdown/"/>
    <updated>2014-11-17T00:00:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/11/17/blog-markdown</id>
    <content type="html"><![CDATA[<p><a href="http://wowubuntu.com/markdown/index.html">贴自http://wowubuntu.com/markdown/index.html</a></p>

<h4>段落和换行</h4>

<p>一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行。普通段落不该用空格或制表符来缩进。<br/>
如果你确实想要依赖 Markdown 来插入 <code>&lt;br /&gt;</code> 标签的话，在插入处先按入两个以上的空格然后回车。</p>

<h4>标题</h4>

<p>Markdown 支持两种标题的语法，类 Setext 和类 atx 形式。<br/>
类 Setext 形式是用底线的形式，利用 = （最高阶标题）和 - （第二阶标题），例如：
<code>
    This is an H1
    =============
    This is an H2
    -------------
</code>
任何数量的 = 和 - 都可以有效果。<br/>
类 Atx 形式则是在行首插入 1 到 6 个 # ，对应到标题 1 到 6 阶，例如：
<code>
    # 这是 H1
    ## 这是 H2
    ###### 这是 H6
</code>
你可以选择性地「闭合」类 atx 样式的标题，这纯粹只是美观用的，若是觉得这样看起来比较舒适，你就可以在行尾加上 #，而行尾的 # 数量也不用和开头一样（行首的井字符数量决定标题的阶数）：
<code>
    # 这是 H1 #
    ## 这是 H2 ##
    ### 这是 H3 ######
</code></p>

<!--more-->


<h4>列表</h4>

<p>Markdown 支持有序列表和无序列表。<br/>
无序列表使用星号、加号或是减号作为列表标记：
<code>
    *   R
    *   Gr
    *   B
</code>
有序列表则使用数字接着一个英文句点：
<code>
    1.Bird
    2.McHale
    3.Parish
</code></p>

<h4>代码区块</h4>

<p>和程序相关的写作或是标签语言原始码通常会有已经排版好的代码区块，通常这些区块我们并不希望它以一般段落文件的方式去排版，而是照原来的样子显示，Markdown 会用 <code>&lt;pre&gt;</code> 和 <code>&lt;code&gt;</code> 标签来把代码区块包起来。<br/>
要在 Markdown 中建立代码区块很简单，只要简单地缩进 4 个空格或是 1 个制表符就可以，例如，下面的输入：
<code>
    这是一个普通段落：
        这是一个代码区块。
</code>
Markdown 会转换成：
<code>
    &lt;p&gt;这是一个普通段落：&lt;/p&gt;
    &lt;pre&gt;&lt;code&gt;这是一个代码区块。
    &lt;/code&gt;&lt;/pre&gt;
</code></p>

<h4>分隔线</h4>

<p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：
<code>
    * * *
    ***
    *****
    - - -
    ---------------------------------------
</code></p>

<h4>链接</h4>

<p>Markdown 支持两种形式的链接语法： 行内式和参考式两种形式。<br/>
不管是哪一种，链接文字都是用 [方括号] 来标记。<br/>
要建立一个行内式的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可，例如：
<code>
    This is [an example](http://example.com/ "Title") inline link.
    [This link](http://example.net/) has no title attribute.
</code>
会产生：
<code>
    &lt;p&gt;This is &lt;a href="http://example.com/" title="Title"&gt;
    an example&lt;/a&gt; inline link.&lt;/p&gt;
    &lt;p&gt;&lt;a href="http://example.net/"&gt;This link&lt;/a&gt; has no
    title attribute.&lt;/p&gt;
</code>
如果你是要链接到同样主机的资源，你可以使用相对路径：
<code>
    See my [About](/about/) page for details.
</code></p>

<h4>图片</h4>

<p>很明显地，要在纯文字应用中设计一个「自然」的语法来插入图片是有一定难度的。
Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： 行内式和参考式。<br/>
行内式的图片语法看起来像是：
<code>
    ![Alt text](/path/to/img.jpg)
    ![Alt text](/path/to/img.jpg "Optional title")
</code>
详细叙述如下：<br/>
    一个惊叹号 !<br/>
    接着一个方括号，里面放上图片的替代文字<br/>
    接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上 选择性的 &lsquo;title&rsquo; 文字。<br/>
参考式的图片语法则长得像这样：
<code>
    ![Alt text][id]
</code>
「id」是图片参考的名称，图片参考的定义方式则和连结参考一样：<br/>
<code>
    [id]: url/to/image  "Optional title attribute"
</code>
到目前为止， Markdown 还没有办法指定图片的宽高，如果你需要的话，你可以使用普通的 <code>&lt;img&gt;</code> 标签。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[树状数组]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/11/16/alg-bit/"/>
    <updated>2014-11-16T21:19:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/11/16/alg-bit</id>
    <content type="html"><![CDATA[<p>大体上可以分为两种:</p>

<h4>一</h4>

<p>每次修改的是一个点，所求的是关于某段区间；<br/>
这种情况最好办；比如说poj2352 stars；求每个点前面比他小的点的个数；<br/>
只用设置数组a[],先全是0，然后有某个点就依次修改，并以此统计；<br/>
这一种是最基本的向上修改，向下统计；<br/>
<code>
    int lowbit(int x) {
        return x&amp;(-x);
    }
    void update(int x,int num) {
        while(x&lt;=N) {
             d[x]+=num;
             x+=lowbit(x);
         }
    }
    int getSum(int x) {
        int s=0;
        while(x&gt;0) {
             s+=d[x];
             x-=lowbit(x);
         }
        return s;
    }
</code></p>

<!--more-->


<h4>二</h4>

<p>每次修改的是一个区间，所求的值是关于某个点的；<br/>
代表的典型题目是HOJ1556 color the ball；<br/>
这个题是每次修改了一整个区间，最后求的是每个点修改的次数；<br/>
这个需要将上面的函数，稍加修改；<br/>
对于[s,t]，要向下修改，将它的区间[0, t]都加一遍update(t)；再向下修改，把不必要的区间[0, s)再减去update(s-1)；
<code>
    void update(int x,int num) {
        while(x&gt;0) {
             d[x]+=num;
             x-=lowbit(x);
         }
    }
    int getSum(int x) {
        int s=0;
        while(x&lt;=N) {
             s+=d[x];
             x+=lowbit(x);
         }
        return s;
    }
</code></p>

<h5>注意</h5>

<div style="color:red">
对于一，可以用于计算统计子树；</br>
对于二，可以用于计算统计树上某个节点的所有祖先节点
</div>


<h4>poj3321</h4>

<p>这题难的不是树状数组，主要是映射到树状数组。<br/>
建树，然后dfs一次就可以算出对某个节点它的第一个下标(在树状数组中)和最后一个下标。那个更改的时候就用这两个下标就行了。<br/>
<img src="/images/alg/20141116.png" alt="" /><br/>
类似于将树向右倾斜，dfs建好树后c子树的第一个下标是4，最后一个下标是7。统计子树时只要sum(7)-sum(4-1)</p>

<h4>foj2176</h4>

<p>是poj3321加强版，一样的建树，但是节点要存k个值，然后update和sum的时候注意取和dep的差值，注意update减去val时的dep不要取错，update(le[i], dep[ri[i]], -val);</p>

<pre><code>    #include &lt;stdio.h&gt;
    #include &lt;vector&gt;
    using namespace std;

    int n,m,mod;
    vector&lt;int&gt; tr[50009];
    int pre[50009];
    int s[50009][5];
    int dep[50009];
    int now, le[50009], ri[50009];

    int lowbit(int x)
    {
        return x&amp;(-x);
    }

    void update(int x, int de, int v)
    {
        int i;
        while (x &gt; 0) {
            i = (dep[x]-de+mod*1000000)%mod;
            s[x][i%mod] += v;
            x -= lowbit(x);
        }
    }

    int sum(int x, int de)
    {
        int i, j, val[5], ret;
        for (i=0;i&lt;mod;i++) val[i] = 0;
        while (x &lt;= now) {
            j = i = (de-dep[x]+mod*1000000)%mod;
            for (;i&lt;j+mod;i++)
                val[i%mod] += s[x][i-j];
            x += lowbit(x);
        }
        ret = 0;
        for (i=0;i&lt;mod;i++) ret += (i+1)*val[i];
        return ret;
    }

    void dfs(int k, int d)
    {
        int i;
        le[k] = now;
        for (i=0;i&lt;tr[k].size();i++)
            dfs(tr[k][i], d+1);
        now++;
        ri[k] = now;
        dep[now] = d;
    }

    int main()
    {
        int i,j,k,l,T,cas=0;
        scanf("%d", &amp;T);
        while (T--)
        {
            cas++;
            printf("Case#%d:\n", cas);
            scanf("%d %d %d", &amp;n, &amp;m, &amp;mod);
            for (i=1;i&lt;=n;i++) tr[i].clear();
            for (i=1;i&lt;n;i++) {
                scanf("%d %d", &amp;j, &amp;k);
                pre[k] = j;
                tr[j].push_back(k);
            }
            for (i=1;i&lt;=n;i++) if (pre[i] == 0) break;
            now = 0;
            dfs(i, 0);
            for (i=0;i&lt;=now;i++)
                for (j=0;j&lt;mod;j++) s[i][j] = 0;
            while (m--) {
                scanf("%d", &amp;l);
                if (l == 1) {
                    scanf("%d %d", &amp;j, &amp;k);
                    update(ri[j], dep[ri[j]], k);
                    update(le[j], dep[ri[j]], -k);
                } else {
                    scanf("%d", &amp;j);
                    k = sum(ri[j], dep[ri[j]]);
                    printf("%d\n", k);
                }
            }
        }
        return 0;
    }
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress分类中使用二级目录]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/11/13/octopress-3/"/>
    <updated>2014-11-13T23:49:25+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/11/13/octopress-3</id>
    <content type="html"><![CDATA[<h4>1.修改plugins/category_list_tag.rb为</h4>

<pre><code>    # encoding: UTF-8
    module Jekyll
        class CategoryListTag &lt; Liquid::Tag
            def render(context)
                html = ""
                pre = ""
                divout = 0
                categories = context.registers[:site].categories.keys
                categories.sort.each do |category|
                    posts_in_category = context.registers[:site].categories[category].size
                    category_dir = context.registers[:site].config['category_dir']
                    cats = category.split(/~/)
                    if cats.size &gt; 1 and cats[0] == pre
                        if divout == 0
                            html &lt;&lt; "&lt;div id='#{pre}' class='divclass'&gt;"
                            divout = 1
                        end
                        html &lt;&lt; "&lt;li&gt;&lt;a href='http://abcdxyzk.github.io/#{category_dir}/#{category.to_url}/?opendiv=#{pre}'&gt;#{cats[1]} (#{posts_in_category})&lt;/a&gt;&lt;/li&gt;\n"
                    else
                        pre = cats[0]
                        if divout &gt; 0
                            html &lt;&lt; "&lt;/div&gt;"
                            divout = 0
                        end
                        html &lt;&lt; "&lt;li class='category'&gt;&lt;a href='##' onmousedown=showDiv('#{pre}')&gt;#{category} &lt;/a&gt;&lt;a href='http://abcdxyzk.github.io/#{category_dir}/#{category.to_url}/'&gt;(#{posts_in_category})&lt;/a&gt;&lt;/li&gt;\n"
                    end
                end
                if divout &gt; 0
                    html &lt;&lt; "&lt;/div&gt;"
                    divout = 0
                end
                html
            end
        end
    end

    Liquid::Template.register_tag('category_list', Jekyll::CategoryListTag)
</code></pre>

<!--more-->


<h4>2.修改source/_includes/custom/asides/category_list.html为：注意去掉’\‘</h4>

<pre><code>    &lt;section&gt;
    &lt;h1&gt;Categories&lt;/h1&gt;
    &lt;head&gt;
    &lt;style type="text/css"&gt;

    .divclass
    {
        display:none;
        font-size:12px;
        position:relative;
        left:0px;
        top:0px;
        padding:0px 30px 0px 30px;
    }
    &lt;/style&gt;
    &lt;script language="javascript" type="text/javascript"&gt;

    function showDiv(divName)
    {
        if (document.getElementById(divName).style.display == "block")
            document.getElementById(divName).style.display = "none"; //隐藏层
        else
            document.getElementById(divName).style.display = "block"; //显示层
    }

    function GetRequest(name) {
        var url = location.search; //获取url中"?"符后的字串
        if (url.indexOf("?") != -1) {
            var str = url.substr(1);
            strs = str.split("&amp;");
            for(var i = 0; i &lt; strs.length; i ++) {
                if (name == strs[i].split("=")[0])
                return unescape(strs[i].split("=")[1]);
            }
        }
        return null;
    }
    &lt;/script&gt;
    &lt;/head&gt;
    &lt;body&gt;
    &lt;div id="menu"&gt;
    &lt;ul&gt;
    {\% category_list \%}
    &lt;/ul&gt;
    &lt;/div&gt;
    &lt;/body&gt;
    &lt;/html&gt;

    &lt;script language="javascript" type="text/javascript"&gt;
    var divname = GetRequest("opendiv");
    if (divname != null)
        showDiv(divname)
    &lt;/script&gt;
    &lt;/section&gt;
</code></pre>

<h4>3.使用二级标签的时候先写一个一级标签，写一个一级~二级标签，例如：</h4>

<pre><code> categories:
 - hello
 - hello~hi
</code></pre>

<h4>4.add</h4>

<h5>后来又改成了三级目录，显示调整，单列时间分类等。具体去看源码对应文件。</h5>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress侧边栏添加内容]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/11/13/octopress-2/"/>
    <updated>2014-11-13T23:21:52+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/11/13/octopress-2</id>
    <content type="html"><![CDATA[<h4>1.添加about页面</h4>

<p>rake new_page[about]<br/>
会生成 source/about/index.markdown 文件。<br/>
编辑该文件的内容。<br/>
然后在头部导航菜单中添加页面的超链接。具体做法是编辑 /source/_includes/custom/navigation.html 文件。</p>

<h4>2.增加链接</h4>

<p>在source/_includes/custom/asides创建blog_link.html，代码如下：<br/>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;section&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;link&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;ul&gt;
</span><span class='line'>        &lt;li&gt;
</span><span class='line'>                &lt;a href=http://hi.baidu.com/abcdxyzk target=_blank&gt;My&lt;/a&gt;
</span><span class='line'>        &lt;/li&gt;
</span><span class='line'>&lt;/ul&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;/section&gt;</span></code></pre></td></tr></table></div></figure>
然后修改_config.yml文件在default_asides中加入custom/asides/blog_link.html。</p>

<!--more-->


<h4>3.支持评论</h4>

<p>Octopress自身不支持评论功能，不过我们可以使用第三方的评论系统，国外的有Disqus。下面介绍怎样在Octopress中使用Disqus。<br/>
首先需要在Disqus注册一个账号，登录后点击Add Disqus to your site，然后添加站点信息site name和url，记下右侧的name<br/>
然后在_config.yml文件中进行下面设置<br/>
<code>
    # Disqus Comments
    disqus_short_name: 为添加站点信息时的name
    disqus_show_comment_count: true
</code></p>

<h4>4.添加Categories侧边栏</h4>

<p>增加category_list插件<br/>
保存到 plugins/category_list_tag.rb：<br/>
<code>
    # encoding: UTF-8
        module Jekyll
                class CategoryListTag &lt; Liquid::Tag
                        def render(context)
                                html = ""
                                categories = context.registers[:site].categories.keys
                                categories.sort.each do |category|
                                        posts_in_category = context.registers[:site].categories[category].size
                                        category_dir = context.registers[:site].config['category_dir']
                                        html &lt;&lt; "&lt;li class='category'&gt;&lt;a href='http://abcdxyzk.github.io/#{category_dir}/#{category.to_url}/'&gt;#{category} (#{posts_in_category})&lt;/a&gt;&lt;/li&gt;\n"
                                end
                                html
                        end
                end
        end
    Liquid::Template.register_tag('category_list', Jekyll::CategoryListTag)
</code></p>

<p>注意：一定要在文件的开始添加# encoding: UTF-8这一行，否则无法支持中文分类。<br/>
增加aside<br/>
保存到 source/<em>includes/asides/category_list.html：注意去掉&#8217;\&lsquo;<br/>
<code>
    &lt;section&gt;
        &lt;h1&gt;Categories&lt;/h1&gt;
        &lt;ul id="categories"&gt;
            {\% category_list \%}
        &lt;/ul&gt;
    &lt;/section&gt;
</code>
修改</em>config.yml文件<br/>
将category_list添加到default_asides：<br/>
   default_asides: [asides/category_list.html, asides/recent_posts.html]<br/>
安装这个插件后直接可以支持中文分类，url中使用的是分类的拼音，如「数据库」对应「shu-ju-ku」。如果使用中文分类时遇到各种错误，请参考下面这两篇文章：</p>

<pre><code>http://aiku.me/bar/10393365  
http://blog.sprabbit.com/blog/2012/03/23/octopress/  
</code></pre>

<h4>5.添加tag</h4>

<p>首先到<a href="https://github.com/robbyedwards/octopress-tag-pages  ">https://github.com/robbyedwards/octopress-tag-pages  </a>
和<a href="https://github.com/robbyedwards/octopress-tag-cloudclone  ">https://github.com/robbyedwards/octopress-tag-cloudclone  </a>
这两个项目的代码。这两个项目分别用于产生tag page和tag cloud。 针对这两个插件，需要手工复制一些文件到你的octopress目录。</p>

<p>octopress-tag-pages<br/>
复制tag_generator.rb到plugins目录；<br/>
复制tag_index.html到source/<em>layouts目录。<br/>
复制tag_feed.xml到source/</em>includes/custom/目录。tag_feed.xml文件中 layout: nil 改为 layout: null<br/>
其他文件就不需要复制了，都是些例子。</p>

<p>octopress-tag-cloud<br/>
仅复制tag_cloud.rb到plugins目录即可。<br/>
添加aside，复制以下代码到source/<em>includes/custom/asides/tags.html。注意去掉&#8217;\&lsquo;<br/>
<code>
    &lt;section&gt;
        &lt;h1&gt;Tags&lt;/h1&gt;
        &lt;ul class="tag-cloud"&gt;
            {\% tag_cloud font-size: 90-210%, limit: 100, style: para \%}
        &lt;/ul&gt;
    &lt;/section&gt;
</code>
tag_cloud的参数中，style :para指定不使用li来分割，limit限定100个tag，font-size指定tag的大小范围，具体参数参看官方文档。<br/>
最后，当然是在</em>config.xml的default_asides 中添加这个tag cloud到导航栏：<br/>
<code>
default_asides: [... custom/asides/tags.html, ...]
</code></p>

<h5>bug:</h5>

<p>除0错误，tag_cloud.rb中<br/>
weight = (Math.log(count) - Math.log(min))/(Math.log(max) - Math.log(min))<br/>
当max==min时出错<br/>
一下修复同时改成像Categories一样显示文章数<br/>
<code>
--- a/plugins/tag_cloud.rb
+++ b/plugins/tag_cloud.rb
@@ -54,7 +54,7 @@ def initialize(name, params, tokens)
 # map: [[tag name, tag count]] -&gt; [[tag name, tag weight]]
        weighted = count.map do |name, count|
 # logarithmic distribution
-       weight = (Math.log(count) - Math.log(min))/(Math.log(max) - Math.log(min))
+       weight = count
        [name, weight]
        end
 # get the top @limit tag pairs when a limit is given, unless the sort method is random
@@ -92,12 +92,17 @@ def initialize(name, params, tokens)
        html = ""
 # iterate over the weighted tag Array and create the tag items
        weighted.each_with_index do |tag, i|
-       name, weight = tag
+       name, weight_orig = tag
+        if min == max
+               weight = 0.5
+       else
+               weight = (Math.log(weight_orig) - Math.log(min))/(Math.log(max) - Math.log(min))
+       end
        size = size_min + ((size_max - size_min) * weight).to_f
        size = sprintf("%.#{@precision}f", size)
        slug = name.to_url
        @separator = "" if i == (weighted.size - 1)
-       html &lt;&lt; "#{@tag_before}&lt;a style=\"font-size: #{size}#{unit}\" href=\"/#{dir}/#{slug}/\"&gt;#{name}&lt;/a&gt;#{@separator}#{@tag_after}\n"
+       html &lt;&lt; "#{@tag_before}&lt;a style=\"font-size: #{size}#{unit}\" href=\"/#{dir}/#{slug}/\"&gt;#{name}(#{weight_orig})&lt;/a&gt;#{@separator}#
        end
        html
        end
</code></p>

<h6>如果会出现:</h6>

<p>添加超过一个tags之后，rake generate就会开始报错了： Error :Liquid Exception: comparison of Array with Array failed in page<br/>
只需要将1个tag重复2次以上使用就可以解决。<br/>
1.第1个post加的tag是：tag1，第2个post加的tag是：tag1<br/>
2.rake generate<br/>
3.第2个post的tag随便改：tagXXX</p>

<h4>6.近期评论</h4>

<p>复制以下代码到source/_includes/custom/asides/recent_comments.html，名字改成自己的<br/>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;section id="comment_sidebar"&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h1&gt;近期评论&lt;/h1&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;script type="text/javascript" src="http://abcdxyzk.disqus.com/recent_comments_widget.js?num_items=10&hide_avatars=0&avatar_size=32&excerpt_length=20"&gt;&lt;/script&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;a href="http://disqus.com/"&gt;Powered by Disqus&lt;/a&gt;
</span><span class='line'>&lt;/section&gt;
</span><span class='line'>&lt;code&gt;
</span><span class='line'>修改_config.yml  
</span><span class='line'>最后，当然是在_config.xml的default_asides 中添加这个tag cloud到导航栏：  
</span><span class='line'>&lt;/code&gt;
</span><span class='line'>default_asides: [&hellip; custom/asides/recent_comments.html, &hellip;]</span></code></pre></td></tr></table></div></figure></p>

<h4>7.优化</h4>

<p>删除<br/>
 source/<em>includes/custom/head.html<br/>
 source/</em>includes/head.html<br/>
中googleapis</p>

<h4>8.BUG，最新octopress的已经修复</h4>

<p>除了根目录，其他目录无法将右侧缩到底部。<br/>
可以修改一下source/_includes/head.html文件，去掉src中的&#8217;.&lsquo;，改成如下：<br/>
<code>
  &lt;script&gt;!window.jQuery &amp;&amp; document.write(unescape('%3Cscript src="http://abcdxyzk.github.io/javascripts/libs/jquery.min.js"%3E%3C/script%3E'))&lt;/script&gt;
</code></p>
]]></content>
  </entry>
  
</feed>
