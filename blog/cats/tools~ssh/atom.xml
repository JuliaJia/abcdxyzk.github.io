<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tools~ssh | kk Blog —— 通用基础]]></title>
  <link href="http://abcdxyzk.github.io/blog/cats/tools~ssh/atom.xml" rel="self"/>
  <link href="http://abcdxyzk.github.io/"/>
  <updated>2014-12-14T16:05:16+08:00</updated>
  <id>http://abcdxyzk.github.io/</id>
  <author>
    <name><![CDATA[kk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SELinux引起的SSH公钥认证失败]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/10/15/tools-ssh-rsa-error/"/>
    <updated>2014-10-15T10:39:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/10/15/tools-ssh-rsa-error</id>
    <content type="html"><![CDATA[<ul>
<li><p>restorecon -r -vv /root/.ssh</p>

<p>新装一台机器按照正常配置以后居然使用publickey方式认证不成功，但是使用密码认证是可以的。</p>

<p>具体现象表现为使用SecureCRT登陆时，出现如下出错提示：
Public-key authentication with the server for user sw failed. Please verify username and public/private key pair.
查看服务器日志，找不到有用的相关记录。
之后直接在另一台机器上使用ssh连接，打开verbose模式（ssh -vvv），如下：
<code>
...
debug1: Next authentication method: password
sw@xxx.xxx.xxx.xxx's password:
</code>
可以看到，ssh先尝试了使用publickey进行认证，但是失败了，日志也没有显示相关原因，然后降级到使用密码认证。</p></li>
</ul>


<p>求助万能的Google，发现serverfault上有一个案例的现象和出错信息与我遇到几乎一样，提问者怀疑是SELinux导致的。
案例 见 <a href="http://www.linuxidc.com/Linux/2013-07/87267p2.htm  ">http://www.linuxidc.com/Linux/2013-07/87267p2.htm  </a>
下面的回复证实了确实是SELinux的问题，并且给出了解决方案：<br/>
Yes, SELinux is likely the cause. The .ssh dir is probably mislabeled. Look at /var/log/audit/audit.log. It should be labeled ssh_home_t. Check with ls -laZ. Run restorecon -r -vv /root/.ssh if need be.</p>

<p>Yep, SELinux was the cause: type=AVC msg=audit(1318597097.413:5447): avc:denied { read } for pid=19849 comm=&ldquo;sshd&rdquo; name=&ldquo;authorized_keys&rdquo; dev=dm-0 ino=262398 scontext=unconfined_u:system_r:sshd_t:s0-s0:c0.c1023 tcontext=unconfined_u:object_r:admin_home_t:s0 tclass=file</p>

<p>It works after running &ldquo;restorecon -r -vv /root/.ssh&rdquo;. Thanks a lot.</p>

<p>我如获救命稻草，马上用ls -laZ检查了一下我的.ssh目录，果然不是ssh_home_t，心中窃喜，立刻使用restorecon对.ssh目录的context进行了恢复。</p>

<p>重新连接SSH，认证成功，问题解决</p>

<p>把SELinux暂时关了试试，使用setenforce 0把SELinux关闭，重新尝试连接，publickey认证正常了。 <br/>
确认了是SELinux引发的问题<br/>
然后setenforce 1打开SELinux。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ssh利用RSA公钥远程登录验证]]></title>
    <link href="http://abcdxyzk.github.io/blog/2013/03/12/tools-ssh-rsa/"/>
    <updated>2013-03-12T11:54:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2013/03/12/tools-ssh-rsa</id>
    <content type="html"><![CDATA[<h5>1、本地机器生成密钥</h5>

<pre><code>$ssh-keygen -t rsa
</code></pre>

<p>生成基于ssh协议第二版密钥，如果还是用rsa1，该升级了。</p>

<h5>2、复制生成的id_rsa.pub公钥文件到远程服务器，简单的用：</h5>

<pre><code>$scp id_rsa.pub bsduser@192.168.1.188:mykey.pub
</code></pre>

<h5>3、密码登陆远程服务器：</h5>

<pre><code>$ssh 192.168.1.188 -l bsduser
</code></pre>

<p>这里注意不是cp，而是cat；不是">&ldquo;，而是&rdquo;>>&ldquo;的操作：
<code>
%cat mykey.pub &gt;&gt; $HOME/.ssh/authorized_keys
</code></p>

<h5>4、重启sshd</h5>

<pre><code>#/etc/rc.d/sshd restart
</code></pre>

<h5>5、此时进行登录测试：</h5>

<pre><code>$ssh bsduser@192.168.1.188
</code></pre>

<p>成功，则可以不用输入繁琐和易泄露的密码。但是条件是你要保护好自己的密钥文件信息。</p>

<ul>
<li>注意authorized_keys文件权限设置600</li>
</ul>

]]></content>
  </entry>
  
</feed>
