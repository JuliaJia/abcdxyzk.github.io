<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: android~base | kk Blog —— 通用基础]]></title>
  <link href="http://abcdxyzk.github.io/blog/cats/android~base/atom.xml" rel="self"/>
  <link href="http://abcdxyzk.github.io/"/>
  <updated>2015-05-11T11:08:27+08:00</updated>
  <id>http://abcdxyzk.github.io/</id>
  <author>
    <name><![CDATA[kk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[img.ext4格式]]></title>
    <link href="http://abcdxyzk.github.io/blog/2015/01/03/android-img.ext4/"/>
    <updated>2015-01-03T14:36:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2015/01/03/android-img.ext4</id>
    <content type="html"><![CDATA[<p>工具 <a href="https://github.com/abcdxyzk/ext4_utils">https://github.com/abcdxyzk/ext4_utils</a></p>

<h4>一、转换源文件为ext4格式</h4>

<p>然后，我们可以使用./simg2img src des命令来转换system.img.ext4格式文件了
<code>
    ./simg2img system.img.ext4 system.img
</code></p>

<h4>二、挂载镜像到指定目录</h4>

<p>然后挂载此img到一个目录上
<code>
    mount -o loop system.img sysmain
</code>
成功挂载。然后你就可以进入目录了查看里面的文件了！！！！！</p>

<h4>三、修改镜像内的文件</h4>

<p>这时候可以进入挂载的目录mysys里面查看各个文件，甚至是修改了。不过这时候要注意一点，就是保持文件的原始权限。</p>

<h4>四、打包文件</h4>

<p>当你所有文件搞定后，下来需要一个命令来打包了。
<code>
    ./mkuserimg.sh -s sysmain systest.img.ext4 ext4 tmp 512M
</code>
这里需要注意，temp是我在当前目录新建立的一个目录，后面的512M是这个镜像打包后占用空间大小。如果你不知道你的镜像包应该多大，你查看你景象挂载到目录后，这个景象分区的大小。</p>

<p>恩，当你完成以上步骤，新的systest.img.ext4成功生成了，好了，你可以在fastboot模式下刷入了！！！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[samsung rfs、tar包]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/12/22/android-rfs-tar/"/>
    <updated>2014-12-22T22:15:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/12/22/android-rfs-tar</id>
    <content type="html"><![CDATA[<p>boot.img可以按照 <a href="/blog/2014/12/22/android-img/">这里</a> 的方式编辑</p>

<p>GT-S5830分区
<code>
bml1 mibib
bml2 qcsbl
bml3 oemsbl
bml4 amms
bml5 ????????FSR_STL
bml6 ????????FSR_STL / Empty|Empty RFS Partition???
bml7 arm11boot
bml8 Boot.img
bml9 Recovery.img
bml10 Looks like kernel init?????Contains this string:"em=330M console=NULL hw=5 fbaddr=0xb0000"
bml11 Empty partion no partion table?? Whole file FF
bml12 System.rfs
bml13 Data Partition
bml14 Cache Partition
</code></p>

<p>把所有要打包进ROM的文件都复制到这个文件夹内；<br/>
比如：这些刷机文件包括：boot.img
<code>
   $ tar -cf NewRom.tar boot.img
   $ md5sum -t NewROM.tar &gt;&gt; NewROM.tar
   $ mv NewROM.tar NewROM.tar.md5
</code>
第一句是TAR打包，第二句是md5签名，第三句是改文件名，可以省略。</p>

<p>NewROM.tar.md5就是最后生成的，可供刷机用的ROM了！</p>

<h4>编辑 rfs</h4>

<p>挂载 RFS文件factoryfs.rfs 为一个磁盘：
<code>
    # su
    # mount –o loop factoryfs.rfs System
</code>
进入“磁盘”System目录，你就可以看到factoryfs.rfs解包后的所有内容。</p>

<p>修改好/System的内容后，在超级用户终端执行下面的语句卸载该“磁盘” ，这个操作等价于“打包”过程。
<code>
    # umount System
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[查看所有(挂载、未挂载)的分区]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/12/22/android-partitions/"/>
    <updated>2014-12-22T22:15:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/12/22/android-partitions</id>
    <content type="html"><![CDATA[<p>blog.chinaunix.net/uid-22731254-id-3222708.html</p>

<p>下面的例子都是围绕/system目录。</p>

<p>使用df命令查看
<code>
    # df
    df
    Filesystem Size Used Free Blksize
    /dev       197M 64K   197M 4096
    /mnt/asec  197M 0K    197M 4096
    /mnt/obb   197M 0K    197M 4096
    /system    295M 245M  50M  4096
    /data      755M 26M   728M 4096
    /cache     188M 4M    184M 4096
    /HWUserData 2G 1024K  2G   32768
    /cust      59M 14M    44M  4096
    /mnt/sdcard 7G 753M   6G   32768
    /mnt/secure/asec 7G 753M 6G 32768
</code>
看到/system分区有295MB的大小。</p>

<p>接着查看/proc下的partitions
```
    # cat /proc/partitions
    cat /proc/partitions
    major minor #blocks name</p>

<pre><code>179    0    3817472 mmcblk0
179    1    20      mmcblk0p1
179    2    300     mmcblk0p2
179    3    133120  mmcblk0p3
179    4    1       mmcblk0p4
179    5    12288   mmcblk0p5
179    6    196608  mmcblk0p6
179    7    4096    mmcblk0p7
179    8    3072    mmcblk0p8
179    9    4096    mmcblk0p9
179    10   3072    mmcblk0p10
179    11   3072    mmcblk0p11
179    12   393216  mmcblk0p12
179    13   786432  mmcblk0p13
179    14   4096    mmcblk0p14
179    15   8192    mmcblk0p15
179    16   20480   mmcblk0p16
179    17   4096    mmcblk0p17
179    18   81920   mmcblk0p18
179    19   2154496 mmcblk0p19
179    32   7761920 mmcblk1
179    33   7757824 mmcblk1p1
31     0    4096    mtdblock0
</code></pre>

<p>```</p>

<p>其实，可以在/proc/mounts下面看的更直接。。。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[img格式]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/12/22/android-img/"/>
    <updated>2014-12-22T22:15:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/12/22/android-img</id>
    <content type="html"><![CDATA[<p>备份系统中img：dd if=/dev/block/mmcblk0p2 of=/sdcard/boot.img，回车，可得boot.img。</p>

<h4>工具</h4>

<pre><code>git clone https://github.com/AndroidRoot/BootTools.git BootTools
cd BootTools
make
</code></pre>

<h4>过程</h4>

<pre><code>    # 解压得到 kernel 和 ramdisk，解出来的boot.img-kernel.gz就是zImage
    ./unpack-bootimg.sh boot.img

    # 可以编辑boot.img-ramdisk，编辑好后打包：
    cd boot.img-ramdisk
    find . | cpio -o -H newc | gzip &gt; ../ramdisk-repack.cpio.gz 

    # 查看应加载地址
    ./hdrboot boot.img

    # 重新打包img
    ./mkbootimg --kernel zImage --ramdisk boot.img-ramdisk.cpio.gz --base 13600000 --ramdisk_offset FF8000 --pagesize 4096 -o new_boot.img

    # 查看新加载地址
    ./hdrboot new_boot.img
</code></pre>

<h4>注意</h4>

<p>打包后的文件用hdrboot看到的一些addr值要和原来一样，一些size的则无所谓</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android模拟器]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/12/05/android-monitor/"/>
    <updated>2014-12-05T17:38:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/12/05/android-monitor</id>
    <content type="html"><![CDATA[<p>首先下载Android SDK ，完成安装openjdk-6-jre，还需要安装ia32-libs bison flex libglu1-mesa-dev 。<br/>
将下载回来的Android SDK解压缩后进入文件夹，运行tools/monitor<br/>
Window->Android SDK Manager 选择想要的模拟的android安转<br/>
Window->Android Virtual Device Manager 模拟器管理界面。</p>

<p>下载不了sdk就 <a href="https://awk.so/#newwindow=1&amp;q=dl-ssl.google.com+ip  ">https://awk.so/#newwindow=1&amp;q=dl-ssl.google.com+ip  </a>
搜索dl-ssl.google.com的IP，然后在hosts替换掉。如 203.208.46.200</p>

<h5>安装apk</h5>

<p>在电脑上运行 adb install /XXX/YYY.apk</p>

<p><a href="http://forum.ubuntu.org.cn/viewtopic.php?t=311659">android虚拟机QQ</a></p>

<p><a href="http://www.findspace.name/easycoding/415">http://www.findspace.name/easycoding/415</a></p>

<h5>中文输入法</h5>

<p>要到设置->语言和输入法中勾选选择输入，再点击输入法靠右的地方进行设置。</p>

<p><a href="http://segmentfault.com/blog/cherishsir/1190000000686224">ubuntu下,使用chrome 浏览器运行安卓apk程序</a></p>
]]></content>
  </entry>
  
</feed>
