<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: system~vm | kk Blog —— 通用基础]]></title>
  <link href="http://abcdxyzk.github.io/blog/cats/system~vm/atom.xml" rel="self"/>
  <link href="http://abcdxyzk.github.io/"/>
  <updated>2014-12-04T23:52:07+08:00</updated>
  <id>http://abcdxyzk.github.io/</id>
  <author>
    <name><![CDATA[kk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[VirtualBox压缩vdi]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/10/15/vm-vdi-reduce/"/>
    <updated>2014-10-15T01:15:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/10/15/vm-vdi-reduce</id>
    <content type="html"><![CDATA[<p><a href="http://blog.csdn.net/zcg1041bolg/article/details/7870170">http://blog.csdn.net/zcg1041bolg/article/details/7870170</a></p>

<p>VirtualBox guest os用久了vdi文件就会越来越大，就算在guest os中删除了一些文件，vdi也不会变小。</p>

<h4>如果guest os 是windows:</h4>

<ol>
<li>先在guest os上运行磁盘碎片管理器，将各个磁盘的磁盘碎片减少；</li>
<li>下载sdelete（<a href="http://technet.microsoft.com/en-us/sysinternals/bb897443.aspx%EF%BC%89;">http://technet.microsoft.com/en-us/sysinternals/bb897443.aspx%EF%BC%89;</a></li>
<li>运行sdelete -c -z  c:</li>
<li>关闭guest os 和 VirtualBox</li>
<li>在host os上运行VBoxManage modifyhd &ndash;compact yourImage.vdi</li>
</ol>


<h4>如果guest os 是Linux:</h4>

<ol>
<li>进入su</li>
<li>$ dd if=/dev/zero of=test.file</li>
<li>$ rm test.file</li>
<li>关闭guest os 和 VirtualBox</li>
<li>在host os上 运行 $ VBoxManage modifyhd &ndash;compact yourImage.vdi</li>
</ol>


<p>这样在guest上看到占用的空间就和host上看到的空间就一样了。</p>

<h4>CMD下 的命令行：</h4>

<pre><code>C:\Program Files&gt;cd Oracle
C:\Program Files\Oracle&gt;cd VirtualBox
C:\Program Files\Oracle\VirtualBox&gt;VBoxManage.exe modifyhd --compact E:\ubuntu-virtualbox\ubuntu-virtualBox.vdi
0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%
C:\Program Files\Oracle\VirtualBox&gt;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VMware增加磁盘空间]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/08/15/vm-add-space/"/>
    <updated>2014-08-15T17:30:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/08/15/vm-add-space</id>
    <content type="html"><![CDATA[<h4>一 添加</h4>

<p>选择“VM”&mdash;-“setting”并打开，将光标定位在hard Disk这一选项，然后点击下方的Add按钮<br/>
点击next，执行下一个步骤<br/>
根据提示，创建一个虚拟的磁盘，并点击下一步<br/>
按照默认的，选择SCSI格式的磁盘即可，点击next执行下一步<br/>
按照默认的点击下一步即可完成虚拟磁盘的添加</p>

<p> 则会多出一个/dev/sd?，这里的?代表硬盘编号，第一个硬盘编号为a即sda，第 二个就是sdb，第三个是 sdc，以此类推，一般来说，如果以前没有增加过硬盘，那么原来的硬盘就是sda，通过VMware菜单增加的虚拟硬盘编号就是sdb。如果添加的第二块 硬盘是IDE硬盘，就应该看到hdb，如果是SCSI硬盘，看到的就应该是sdb。</p>

<h4>二 分区</h4>

<p>使用fdisk /dev/sda进入菜单项，m是列出菜单，p是列出分区表，n是增加分区，w是保存并推出。由于这里增加的磁盘只有5G，因此5G划为一个区。
对新建的磁盘进行分区及格式化的工作： <br/>
输入 fdisk  /dev/sdb <br/>
终端会提示：Command （m for help）：<br/>
输入：m  则会出现提示<br/>
然后根据提示输入：n<br/>
会出现下面的提示，依次输入p 和 1 即可<br/>
接着便会提示卷的起始地址和结束地址，都保持默认按回车的即可（意思是只分一个区）<br/>
输入“w”保存并推出<br/>
再次使用 “fdisk -l ”这个命令来查看会发现出现了/dev/sdb1（说明已经完成了分区工作）</p>

<h4>三 对新建的分区进行格式化</h4>

<p>格式化成ext3的文件系统即可<br/>
使用mkfs.ext3 /dev/sda3    格式化分区<br/>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[root@localhost ~]# mkfs.ext3 /dev/sda3
</span><span class='line'>mke2fs 1.39 (29-May-2006)
</span><span class='line'>Filesystem label=
</span><span class='line'>OS type: Linux
</span><span class='line'>Block size=4096 (log=2)
</span><span class='line'>Fragment size=4096 (log=2)
</span><span class='line'>656000 inodes, 1311305 blocks
</span><span class='line'>65565 blocks (5.00%) reserved for the super user
</span><span class='line'>First data block=0
</span><span class='line'>Maximum filesystem blocks=1346371584
</span><span class='line'>41 block groups
</span><span class='line'>32768 blocks per group, 32768 fragments per group
</span><span class='line'>16000 inodes per group
</span><span class='line'>Superblock backups stored on blocks:
</span><span class='line'>        32768, 98304, 163840, 229376, 294912, 819200, 884736&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Writing inode tables: done                         &lt;br/&gt;
</span><span class='line'>Creating journal (32768 blocks): done
</span><span class='line'>Writing superblocks and filesystem accounting information: done&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;This filesystem will be automatically checked every 31 mounts or
</span><span class='line'>180 days, whichever comes first.  Use tune2fs -c or -i to override.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;[root@localhost ~]# cd /
</span><span class='line'>[root@localhost /]# mkdir /cm               #增加一个/cm
</span><span class='line'>[root@localhost /]# mount /dev/sda3 /cm         #挂载分区到   /cm      &lt;br/&gt;
</span><span class='line'>[root@localhost /]# df -h               #挂载后的分区情况
</span><span class='line'>文件系统              容量  已用 可用 已用% 挂载点
</span><span class='line'>/dev/mapper/VolGroup00-LogVol00
</span><span class='line'>                      8.6G  2.8G  5.4G  35% /
</span><span class='line'>/dev/sda1              99M   12M   82M  13% /boot
</span><span class='line'>tmpfs                 125M     0  125M   0% /dev/shm
</span><span class='line'>/dev/sda3             5.0G  139M  4.6G   3% /cm</span></code></pre></td></tr></table></div></figure></p>

<h4>四 设置开机自动加载</h4>

<p>创建加载点：mkdir /cm 挂载之后，      修改vi /etc/fstab  分区表文件，<br/>
在文件最后加上      /dev/sda3  /cm   ext3    defaults    0 0     然后保存，重启即可。</p>

<p>（注意：修改分区表如果有误，将导致进不了linux桌面系统，但这时系统会进入commandline模式，我们可以在commandline模式下对有误的fstab进行修复更改，不过默认情况下这个commandline模式会是Read-Only file system，这意味着你的任何修改操作都是不允许的，但可以通过命令 mount / -o remount,rw  来解除这个限制）。</p>

<h4>vm虚拟机命令行</h4>

<h5>1）开启虚拟机</h5>

<p>vmrun start &ldquo;/opt/VM_OS/RH_OS_B/Red Hat Enterprise Linux 5 64-bit.vmx&rdquo; nogui|gui</p>

<h5>2）停止虚拟机</h5>

<p>vmrun stop &ldquo;/opt/VM_OS/RH_OS_B/Red Hat Enterprise Linux 5 64-bit.vmx&rdquo; nogui|gui</p>

<h5>3）重启虚拟机</h5>

<p>vmrun restart &ldquo;/opt/VM_OS/RH_OS_B/Red Hat Enterprise Linux 5 64-bit.vmx&rdquo; nogui|gui</p>

<h5>4）列出正在运行的虚拟机</h5>

<p>vmrun list</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[VirtualBox摄像头功能]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/05/28/vm-ex-packages/"/>
    <updated>2014-05-28T21:44:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/05/28/vm-ex-packages</id>
    <content type="html"><![CDATA[<h4>1、下载Oracle VM VirtualBox Extension Pack。下载网址如下：</h4>

<p><a href="https://www.virtualbox.org/wiki/Downloads">https://www.virtualbox.org/wiki/Downloads</a></p>

<h4>2、安装Oracle VM VirtualBox Extension Pack</h4>

<p>安装外部扩展包很简单</p>

<h5>第一：打开Oracle VirtualBox，在菜单栏中找到“管理”–>“全局设定”</h5>

<h5>第二：打开“全局设定”，参考下图：</h5>

<p><img src="/images/system/20140528.jpg" alt="" /></p>

<h5>第三：“Extension Packages”中添加下载的Oracle VM VirtualBox Extension Pack，根据提示安装即可，</h5>

<p>然后虚拟机就能用摄像头了</p>
]]></content>
  </entry>
  
</feed>
