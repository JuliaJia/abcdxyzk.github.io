<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: android | kk Blog —— 通用基础]]></title>
  <link href="http://abcdxyzk.github.io/blog/cats/android/atom.xml" rel="self"/>
  <link href="http://abcdxyzk.github.io/"/>
  <updated>2015-05-24T17:17:37+08:00</updated>
  <id>http://abcdxyzk.github.io/</id>
  <author>
    <name><![CDATA[kk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[编译android4.4.2源码]]></title>
    <link href="http://abcdxyzk.github.io/blog/2015/05/20/android-4.4.2/"/>
    <updated>2015-05-20T15:17:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2015/05/20/android-4.4.2</id>
    <content type="html"><![CDATA[<p>android4.4.2和jdk下载 <a href="http://pan.baidu.com/share/home?uk=3691037096&amp;view=share#category/type=0">http://pan.baidu.com/share/home?uk=3691037096&amp;view=share#category/type=0</a></p>

<p><a href="http://www.cnblogs.com/zhx831/p/3550688.html">http://www.cnblogs.com/zhx831/p/3550688.html</a></p>

<p>这篇文章主要记录了我是如何搭建Android编译环境，以及搭建当中遇到的问题以及解决方法。搭建环境依照官网进行，整个搭建环境分为两步：<br/>
1. 安装JDK<br/>
2. 安装相对应的库以及软件</p>

<h4>1、安装JDK</h4>

<p>官网上给出的办法是使用apt进行jdk的安装
<code>
    $ sudo add-apt-repository "deb http://archive.canonical.com/ lucid partner"
    $ sudo apt-get update
    $ sudo apt-get install sun-java6-jdk
</code>
但是我在按照这个方法进行安装是apt提示无法找到jdk安装包。 在更换了好几个source后都无法下载jdk。因此只能考虑手动安装。</p>

<h5>1. 首先在Orecal官网下载JDK：</h5>

<p><a href="http://www.oracle.com/technetwork/java/javase/downloads/java-archive-downloads-javase6-419409.html">http://www.oracle.com/technetwork/java/javase/downloads/java-archive-downloads-javase6-419409.html</a></p>

<p>需要注意的是，现在官方网站上最新的版本的JDK7， 但是这个这个版本是不能用于Android的编译的，一定要去下载JDK6. 希望看到的朋友不要在走我的弯路。</p>

<h5>2. 创建jvm文件夹</h5>

<pre><code>    sudo mkdir /usr/lib/jvm
</code></pre>

<h5>3. 安装JDK6</h5>

<pre><code>    sudo cp jdk-6u45-linux-x64.bin /usr/lib/jvm/
    sudo chmod +x jdk-6u45-linux-x64.bin
    sudo ./jdk-6u45-linux-x64.bin
</code></pre>

<h5>4. 设置环境变量</h5>

<pre><code>    sudo mv jdk1.6.0_45/ jdk6
    export JAVA_HOME=/usr/lib/jvm/jdk6
    export JRE_HOME=${JAVA_HOME}/jre
    export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib
    export PATH=${JAVA_HOME}/bin:$PATH
</code></pre>

<h5>5. 使能环境变量</h5>

<pre><code>    source ~/.bashrc
</code></pre>

<h5>6. 设置JDK6为系统默认JDK</h5>

<p>因为在ubuntu中默认JDK可能是OpenJDK,这里我们设置JDK6为我们默认的JDK
<code>
    sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk6/bin/java 300
    sudo update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/jdk6/bin/javac 300
    sudo update-alternatives --install /usr/bin/javaws javaws /usr/lib/jvm/jdk6/bin/javaws 300
    sudo update-alternatives --install /usr/bin/jar jar /usr/lib/jvm/jdk6/bin/jar 300
    sudo update-alternatives --config java
</code></p>

<h5>7. 至此JDK就安装好了，现在就可以在shell中查看Java版本</h5>

<pre><code>    java -version
</code></pre>

<p>如果编译还提示java错误，就把java路径加到PATH中
<code>
    PATH=$PATH:/usr/lib/jvm/jdk6/bin
</code></p>

<h4>2、安装相对应的库以及软件</h4>

<p>根据官网上的指示我们需要安装如下软件包和lib
<code>
    $ sudo apt-get install git gnupg flex bison gperf build-essential \
      zip curl libc6-dev libncurses5-dev:i386 x11proto-core-dev \
      libx11-dev:i386 libreadline6-dev:i386 libgl1-mesa-glx:i386 \
      libgl1-mesa-dev g++-multilib mingw32 tofrodos \
      python-markdown libxml2-utils xsltproc zlib1g-dev:i386
    $ sudo ln -s /usr/lib/i386-linux-gnu/mesa/libGL.so.1 /usr/lib/i386-linux-gnu/libGL.so
</code>
* 我安装<code>libgl1-mesa-glx:i386</code>的时候提示要卸掉很多软件，就没装这个，也是能正常编译。</p>

<p>但是在安装过程中遇到了如下错误：
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Errors were encountered while processing:
</span><span class='line'>libc6-dev:i386&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;E: Sub-process /usr/bin/dpkg returned an error code (1)
</span><span class='line'>&lt;code&gt;
</span><span class='line'>解决方法如下：
</span><span class='line'>&lt;/code&gt;
</span><span class='line'>    $ sudo apt-get install linux-libc-dev:i386
</span><span class='line'>    $ sudo apt-get install libc6-dev:i386</span></code></pre></td></tr></table></div></figure></p>

<hr />

<p><a href="http://blog.csdn.net/yf210yf/article/details/9206269">http://blog.csdn.net/yf210yf/article/details/9206269</a></p>

<p><a href="http://www.cnblogs.com/qianxudetianxia/p/3681890.html">http://www.cnblogs.com/qianxudetianxia/p/3681890.html</a></p>

<h4>编译代码</h4>

<p>进入源码根目录,编译初始化,在终端中执行：
<code>
    source build/envsetup.sh
</code></p>

<p>选择编译目标：
<code>
    lunch
</code>
选择第一个吧，或者直接
<code>
    lunch aosp_arm-eng
</code></p>

<p>开始编译
<code>
    make -j4
</code>
3、5个小时左右吧</p>

<p>Android 完成编译的时候先执行  source build/envsetup.sh。  在这个shell 脚本中定义了 help,  croot, m, mm, mmm 等 function</p>

<h4>运行模拟器</h4>

<p>在终端中执行：emulator</p>

<p><img src="/images/android/2015-05-20.png" alt="" /></p>

<h5>修改和编译系统应用代码</h5>

<p>我们修改一下系统应用Mms的标题：</p>

<p><img src="/images/android/2015-05-21.png" alt="" /></p>

<p>使用mm命令编译：
<code>
    xxx@ubuntu:~/Data/android/packages/apps/Mms$ mm
    ============================================
    PLATFORM_VERSION_CODENAME=REL
    PLATFORM_VERSION=4.4.3.2.1.000.000
    TARGET_PRODUCT=aosp_arm
    TARGET_BUILD_VARIANT=eng
    TARGET_BUILD_TYPE=release
    TARGET_BUILD_APPS=
    TARGET_ARCH=arm
    TARGET_2ND_ARCH=
    TARGET_ARCH_VARIANT=armv7-a
    TARGET_CPU_VARIANT=generic
    HOST_ARCH=x86
    HOST_OS=linux
    HOST_OS_EXTRA=Linux-3.13.0-24-generic-x86_64-with-Ubuntu-14.04-trusty
    HOST_BUILD_TYPE=release
    BUILD_ID=OPENMASTER
    OUT_DIR=out
    ============================================
    make:进入目录'/home/xxx/Data/android'
    target R.java/Manifest.java: Mms (out/target/common/obj/APPS/Mms_intermediates/src/R.stamp)
    warning: string 'menu_insert_smiley' has no default translation.
    target Java: Mms (out/target/common/obj/APPS/Mms_intermediates/classes)
    注: 某些输入文件使用或覆盖了已过时的 API。
    注: 有关详细信息, 请使用 -Xlint:deprecation 重新编译。
    注: 某些输入文件使用了未经检查或不安全的操作。
    注: 有关详细信息, 请使用 -Xlint:unchecked 重新编译。
    Copying: out/target/common/obj/APPS/Mms_intermediates/classes-jarjar.jar
    Copying: out/target/common/obj/APPS/Mms_intermediates/emma_out/lib/classes-jarjar.jar
    Copying: out/target/common/obj/APPS/Mms_intermediates/classes.jar
    Proguard: out/target/common/obj/APPS/Mms_intermediates/proguard.classes.jar
    ProGuard, version 4.10
    Reading program jar [/home/xxx/Data/android/out/target/common/obj/APPS/Mms_intermediates/classes.jar]
    // ... ...
    target Dex: Mms
    Copying: out/target/common/obj/APPS/Mms_intermediates/classes.dex
    target Package: Mms (out/target/product/generic/obj/APPS/Mms_intermediates/package.apk)
    nothing matches overlay file ic_contact_picture.png, for flavor ,,,,,,,,,,,,mdpi,,,,,,,
    libpng warning: iCCP: known incorrect sRGB profile
    libpng warning: iCCP: known incorrect sRGB profile
    warning: string 'menu_insert_smiley' has no default translation.
    warning: string 'menu_insert_smiley' is missing 19 required localizations: az_AZ en_AU en_CA en_GB en_IN en_NZ en_SG en_US eo_EU hy_AM ka_GE km_KH lo_LA mn_MN ne_NP si_LK zh_CN zh_HK zh_TW
    dex2oatd I 21424 21424 art/dex2oat/dex2oat.cc:1082] dex2oat: out/host/linux-x86/bin/dex2oatd --runtime-arg -Xms64m --runtime-arg -Xmx64m --boot-image=out/target/product/generic/dex_bootjars/system/framework/boot.art --dex-file=out/target/product/generic/obj/APPS/Mms_intermediates/package.apk --dex-location=/system/priv-app/Mms.apk --oat-file=out/target/product/generic/obj/APPS/Mms_intermediates/package.odex --android-root=out/target/product/generic/system --instruction-set=arm --instruction-set-features=default
    dex2oatd I 21424 21424 art/dex2oat/dex2oat.cc:252] dex2oat took 1.189425041s (threads: 8)
    Notice file: packages/apps/Mms/NOTICE -- out/target/product/generic/obj/NOTICE_FILES/src//system/priv-app/Mms.apk.txt
    Install: out/target/product/generic/system/priv-app/Mms.apk
    Install: out/target/product/generic/system/priv-app/Mms.odex
    // ... ...
    Install: out/target/product/generic/data/app/MmsTests.apk
    Install: out/target/product/generic/data/app/MmsTests.odex
    make:离开目录“/home/xxx/Data/android”
</code></p>

<p>主要是生成了两个文件：<br/>
out/target/product/generic/system/priv-app/Mms.apk<br/>
out/target/product/generic/system/priv-app/Mms.odex</p>

<h5>安装到手机</h5>

<p>因为是系统应用，为了重启有效，使用push命令把两个文件push到模拟器中对应的位置：
<code>
    // 注意现在一些核心的应用的位置由以前的system/app调整为了system/priv-app，不要push错了
    /*
    xxx@ubuntu:~/Data/android$ adb push out/target/product/generic/system/priv-app/Mms.odex /system/priv-app
    2893 KB/s (2085348 bytes in 0.703s)
    xxx@ubuntu:~/Data/android$ adb push out/target/product/generic/system/priv-app/Mms.apk /system/priv-app
    3315 KB/s (1785258 bytes in 0.525s)
</code>
看模拟器的标题被替换了。类似了，你可以修改framework，替换内核</p>

<p>在  ~/.bashrc</p>

<p>添加环境变量：
<code>
    export ANDROID_PRODUCT_OUT=~/code/android-4.2/out/target/product/generic
    export ANDROID_SWT=~/code/android-4.2/out/host/linux-x86/framework/
</code></p>

<h4>备注：</h4>

<p>执行emulator，出现如下错误：
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>emulator: ERROR: You did not specify a virtual device name, and the system
</span><span class='line'>directory could not be found.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;If you are an Android SDK user, please use &lsquo;@&lt;name&gt;&rsquo; or &lsquo;-avd &lt;name&gt;&rsquo;
</span><span class='line'>to start a given virtual device (see -help-avd for details).
</span><span class='line'>Otherwise, follow the instructions in -help-disk-images to start the emulator</span></code></pre></td></tr></table></div></figure></p>

<p>解决：
<code>
    source build/envsetup.sh
    lunch sdk-eng
</code>
然后再执行
<code>
    emulator
</code>
可以启动模拟器</p>

<hr />

<p><a href="http://senrsl.blogspot.com/2015/03/s4shv-e300lkernelrom.html">http://senrsl.blogspot.com/2015/03/s4shv-e300lkernelrom.html</a></p>

<h3>三星S4韩版SHV-E300L源码编译(内核Kernel+ROM)</h3>

<h4>编译ROM</h4>

<h5>①准备工作</h5>

<p>先看说明README_Platform.txt
<code>
        How to build Module for Platform
        - It is only for modules are needed to using Android build system.
        - Please check its own install information under its folder for other module.
        [Step to build]
        1. Get android open source.
            : version info - Android 4.4
            ( Download site : http://source.android.com )
        2. Copy module that you want to build - to original android open source
           If same module exist in android open source, you should replace it. (no overwrite)
            # It is possible to build all modules at once.
        3. You should add module name to 'PRODUCT_PACKAGES' in 'build\target\product\core.mk' as following case.
            case 1) e2fsprog : should add 'e2fsck' to PRODUCT_PACKAGES
            case 2) blkid : should add 'libkeyutils' to PRODUCT_PACKAGES
            case 3) libhyphenation : should add 'libkeyutils' to PRODUCT_PACKAGES
            case 4) KeyUtils : should add 'libkeyutils' to PRODUCT_PACKAGES
            case 5) libexifa : should add 'libexifa' to PRODUCT_PACKAGES
            case 6) libjpega : should add 'libjpega' to PRODUCT_PACKAGES
            ex.) [build\target\product\core.mk] - add all module name for case 1 ~ 5 at once
                PRODUCT_PACKAGES += \
                    e2fsck \
                    blkid \
                    libhyphenation \
                    libkeyutils \
                    libexifa \
                    libjpega \
                    ebtables
        4. excute build command
            ./build_platform.sh
        Note :
        to build SBrowser (vendor/samsung/packages/apps/SBrowser),
        please refer to Buildme.txt at the folder mentioned above.
</code></p>

<p>意思就是说分4部走，后面加了个注释。</p>

<p>分别是下载4.4的源码，把包里的要编译的模块拷进去(替换,非覆盖),增加要编译的模块到core.mk进行注册,执行编译脚本。</p>

<p>查看当前源码版本
<code>
senrsl@senrsl-ubuntu:~$ cd android/source/WORKING_DIRECTORY/
senrsl@senrsl-ubuntu:~/android/source/WORKING_DIRECTORY$ repo branches
*  android-4.4.2_r2          | in all projects
    master                    | in:
                                      abi/cpp
                                      ....
</code>
所有的版本号里没有叫4.4的，只有4.4.*的。。。。</p>

<p>好吧，就用这个。</p>

<h5>②替换模块</h5>

<p>1)external目录,把这些目录剪出来
<code>
        senrsl@senrsl-ubuntu:~/android/source/test/三星替换 /external$ ll
        总用量 40
        drwxrwxr-x 10 senrsl senrsl 4096  3月 30 14:53 ./
        drwxrwxr-x  4 senrsl senrsl 4096  3月 30 15:02 ../
        drwxrwxr-x 17 senrsl senrsl 4096  3月 20 13:35 chromium/
        drwxrwxr-x  9 senrsl senrsl 4096  3月 20 13:36 dnsmasq/
        drwxrwxr-x 19 senrsl senrsl 4096  3月 20 13:36 e2fsprogs/
        drwxrwxr-x  3 senrsl senrsl 4096  3月 20 13:36 gcc-demangle/
        drwxrwxr-x  4 senrsl senrsl 4096  3月 20 13:36 hyphenation/
        drwxrwxr-x 15 senrsl senrsl 4096  3月 20 13:36 iproute2/
        drwxrwxr-x 11 senrsl senrsl 4096  3月 20 13:36 iptables/
        drwxrwxr-x  4 senrsl senrsl 4096  3月 20 13:36 junit/
</code>
把这些目录放进去
<code>
        senrsl@senrsl-ubuntu:~$ cd android/source/SHV-E300L_KK_Opensource/Platform/external/
        senrsl@senrsl-ubuntu:~/android/source/SHV-E300L_KK_Opensource/Platform/external$ ll
        总用量 44
        drwxrwxr-x 11 senrsl senrsl 4096 10月 14 09:23 ./
        drwxrwxr-x  5 senrsl senrsl 4096  3月 30 13:10 ../
        drwxrwxr-x 17 senrsl senrsl 4096 10月  8 12:16 chromium/
        drwxrwxr-x  9 senrsl senrsl 4096 10月  8 09:07 dnsmasq/
        drwxrwxr-x 18 senrsl senrsl 4096 10月  8 09:07 e2fsprogs/
        drwxrwxr-x  2 senrsl senrsl 4096 10月  8 09:07 gcc-demangle/
        drwxrwxr-x  3 senrsl senrsl 4096 10月  8 09:07 hyphenation/
        drwxrwxr-x 14 senrsl senrsl 4096 10月  8 09:07 iproute2/
        drwxrwxr-x 10 senrsl senrsl 4096 10月  8 09:07 iptables/
        drwxrwxr-x  3 senrsl senrsl 4096 10月  8 09:07 junit/
        drwxrwxr-x 10 senrsl senrsl 4096 10月  8 12:23 webkit/
</code>
2)vendor目录，把vendor/samsung放进去</p>

<p>3)build目录，把这俩文件剪出来，把Platform里的放进去
<code>
        senrsl@senrsl-ubuntu:~/android/source/SHV-E300L_KK_Opensource/Platform/build$ tree
        .
        └── target
            ├── board
            │   └── generic
            │       └── BoardConfig.mk
            └── product
                └── core.mk
        4 directories, 2 files
</code></p>

<h5>③执行编译</h5>

<pre><code>        senrsl@senrsl-ubuntu:~/android/source/WORKING_DIRECTORY$ ./build_platform.sh
</code></pre>

<p>报错
<code>
        target Generated: libwebcore &lt;= external/webkit/Source/WebCore/dom/make_names.pl
        target Generated: libwebcore &lt;= external/webkit/Source/WebCore/dom/make_names.pl
        target Generated: libwebcore &lt;= external/webkit/Source/WebCore/dom/make_names.pl
        target Generated: libwebcore &lt;= external/webkit/Source/WebCore/dom/make_names.pl
        target Generated: libwebcore &lt;= external/webkit/Source/WebCore/dom/make_names.pl
        target Generated: libwebcore &lt;= external/webkit/Source/WebCore/dom/make_names.pl
        target Generated: libwebcore &lt;= external/webkit/Source/WebCore/dom/make_names.pl
        target Generated: libwebcore &lt;= external/webkit/Source/WebCore/dom/make_names.pl
        target Generated: libwebcore &lt;= external/webkit/Source/WebCore/dom/make_names.pl
        Export includes file: frameworks/opt/emoji/Android.mk -- out/target/product/generic/obj/SHARED_LIBRARIES/libemoji_intermediates/export_includes
        Export includes file: external/harfbuzz/Android.mk -- out/target/product/generic/obj/SHARED_LIBRARIES/libharfbuzz_intermediates/export_includes
        Export includes file: external/webkit/Android.mk -- out/target/product/generic/obj/STATIC_LIBRARIES/libwebcore_intermediates/export_includes
        Export includes file: external/libxml2/Android.mk -- out/target/product/generic/obj/STATIC_LIBRARIES/libxml2_intermediates/export_includes
        Export includes file: external/libxslt/Android.mk -- out/target/product/generic/obj/STATIC_LIBRARIES/libxslt_intermediates/export_includes
        Export includes file: external/hyphenation/Android.mk -- out/target/product/generic/obj/STATIC_LIBRARIES/libhyphenation_intermediates/export_includes
        Import includes file: out/target/product/generic/obj/SHARED_LIBRARIES/libemoji_intermediates/import_includes
        Import includes file: out/target/product/generic/obj/SHARED_LIBRARIES/libharfbuzz_intermediates/import_includes
        target Generated: libwebcore &lt;= external/webkit/Source/WebCore/html/DocTypeStrings.gperf
        Generating HTMLEntityTable.cpp
        target Generated: libwebcore &lt;= external/webkit/Source/WebCore/platform/ColorData.gperf
        WebCore Yacc: libwebcore &lt;= external/webkit/Source/WebCore/css/CSSGrammar.y
        target Generated: libwebcore &lt;= external/webkit/Source/WebCore/dom/make_names.pl
        WebCore Yacc: libwebcore &lt;= external/webkit/Source/WebCore/xml/XPathGrammar.y
        target Generated: libwebcore &lt;= external/webkit/Source/WebCore/dom/make_names.pl
        Can't locate Switch.pm in @INC (you may need to install the Switch module) (@INC contains: /etc/perl /usr/local/lib/perl/5.18.2 /usr/local/share/perl/5.18.2 /usr/lib/perl5 /usr/share/perl5 /usr/lib/perl/5.18 /usr/share/perl/5.18 /usr/local/lib/site_perl .) at external/webkit/Source/WebCore/make-hash-tools.pl line 23.
        BEGIN failed--compilation aborted at external/webkit/Source/WebCore/make-hash-tools.pl line 23.
        Can't locate Switch.pm in @INC (you may need to install the Switch module) (@INC contains: /etc/perl /usr/local/lib/perl/5.18.2 /usr/local/share/perl/5.18.2 /usr/lib/perl5 /usr/share/perl5 /usr/lib/perl/5.18 /usr/share/perl/5.18 /usr/local/lib/site_perl .) at external/webkit/Source/WebCore/make-hash-tools.pl line 23.
        BEGIN failed--compilation aborted at external/webkit/Source/WebCore/make-hash-tools.pl line 23.
        make: *** [out/target/product/generic/obj/STATIC_LIBRARIES/libwebcore_intermediates/Source/WebCore/html/DocTypeStrings.cpp] 错误 2
        make: *** 正在等待未完成的任务....
        make: *** [out/target/product/generic/obj/STATIC_LIBRARIES/libwebcore_intermediates/Source/WebCore/platform/ColorData.cpp] 错误 2
        target Generated: libwebcore &lt;= external/webkit/Source/WebCore/html/parser/HTMLEntityNames.in
        senrsl@senrsl-ubuntu:~/android/source/WORKING_DIRECTORY$ ./build_platform.sh
</code></p>

<p>在core.mk里把    libwebcore \删掉，再build，报错
<code>
        Install: out/target/product/generic/system/fonts/NotoSansKhmerUI-Bold.ttf
        Install: out/target/product/generic/system/fonts/NotoSansKhmerUI-Regular.ttf
        Install: out/target/product/generic/system/fonts/NotoSansLao-Bold.ttf
        Install: out/target/product/generic/system/fonts/NotoSansLao-Regular.ttf
        Install: out/target/product/generic/system/fonts/NotoSansLaoUI-Bold.ttf
        Install: out/target/product/generic/system/fonts/NotoSansLaoUI-Regular.ttf
        Install: out/target/product/generic/system/fonts/NotoSansMalayalam-Bold.ttf
        collect2: error: ld returned 1 exit status
        Install: out/target/product/generic/system/fonts/NotoSansMalayalam-Regular.ttf
        make: *** [out/target/product/generic/obj/EXECUTABLES/dnsmasq_intermediates/LINKED/dnsmasq] 错误 1
        make: *** 正在等待未完成的任务....
        Install: out/target/product/generic/system/fonts/NotoSansMalayalamUI-Bold.ttf
        external/e2fsprogs/lib/ext2fs/blkmap64_ba.c:339: error: undefined reference to 'ext2fs_test_bit64'
        external/e2fsprogs/lib/ext2fs/blkmap64_ba.c:390: error: undefined reference to 'ext2fs_test_bit64'
        external/e2fsprogs/lib/ext2fs/blkmap64_ba.c:186: error: undefined reference to 'ext2fs_test_bit64'
        external/e2fsprogs/lib/ext2fs/blkmap64_ba.c:281: error: undefined reference to 'ext2fs_mem_is_zero'
        external/e2fsprogs/lib/ext2fs/blkmap64_ba.c:178: error: undefined reference to 'ext2fs_clear_bit64'
        external/e2fsprogs/lib/ext2fs/blkmap64_ba.c:170: error: undefined reference to 'ext2fs_set_bit64'
        external/e2fsprogs/lib/ext2fs/blkmap64_ba.c:141: error: undefined reference to 'ext2fs_clear_bit64'
        external/e2fsprogs/lib/ext2fs/gen_bitmap64.c:735: error: undefined reference to 'ext2fs_get_bitmap_granularity'
        external/e2fsprogs/lib/ext2fs/gen_bitmap64.c:790: error: undefined reference to 'ext2fs_find_first_zero_generic_bitmap'
        external/e2fsprogs/lib/ext2fs/mmp.c:57: error: undefined reference to 'ext2fs_get_dio_alignment'
        external/e2fsprogs/lib/ext2fs/mmp.c:213: error: undefined reference to 'ext2fs_alloc_block2'
        collect2: error: ld returned 1 exit status
        make: *** [out/target/product/generic/obj/SHARED_LIBRARIES/libext2fs_intermediates/LINKED/libext2fs.so] 错误 1
        senrsl@senrsl-ubuntu:~/android/source/WORKING_DIRECTORY$
</code>
再把 libexifa \删掉，报错
<code>
        out/host/linux-x86/obj/SHARED_LIBRARIES/libext2fs_host_intermediates/blkmap64_ba.o: In function `ba_find_first_zero':
        /home/senrsl/android/source/WORKING_DIRECTORY/external/e2fsprogs/lib/ext2fs/blkmap64_ba.c:339: undefined reference to `ext2fs_test_bit64'
        /home/senrsl/android/source/WORKING_DIRECTORY/external/e2fsprogs/lib/ext2fs/blkmap64_ba.c:390: undefined reference to `ext2fs_test_bit64'
        out/host/linux-x86/obj/SHARED_LIBRARIES/libext2fs_host_intermediates/blkmap64_ba.o: In function `ba_test_bmap':
        /home/senrsl/android/source/WORKING_DIRECTORY/external/e2fsprogs/lib/ext2fs/blkmap64_ba.c:186: undefined reference to `ext2fs_test_bit64'
        out/host/linux-x86/obj/SHARED_LIBRARIES/libext2fs_host_intermediates/blkmap64_ba.o: In function `ba_test_clear_bmap_extent':
        /home/senrsl/android/source/WORKING_DIRECTORY/external/e2fsprogs/lib/ext2fs/blkmap64_ba.c:281: undefined reference to `ext2fs_mem_is_zero'
        out/host/linux-x86/obj/SHARED_LIBRARIES/libext2fs_host_intermediates/blkmap64_ba.o: In function `ba_unmark_bmap':
        /home/senrsl/android/source/WORKING_DIRECTORY/external/e2fsprogs/lib/ext2fs/blkmap64_ba.c:178: undefined reference to `ext2fs_clear_bit64'
        out/host/linux-x86/obj/SHARED_LIBRARIES/libext2fs_host_intermediates/blkmap64_ba.o: In function `ba_mark_bmap':
        /home/senrsl/android/source/WORKING_DIRECTORY/external/e2fsprogs/lib/ext2fs/blkmap64_ba.c:170: undefined reference to `ext2fs_set_bit64'
        out/host/linux-x86/obj/SHARED_LIBRARIES/libext2fs_host_intermediates/blkmap64_ba.o: In function `ba_resize_bmap':
        /home/senrsl/android/source/WORKING_DIRECTORY/external/e2fsprogs/lib/ext2fs/blkmap64_ba.c:141: undefined reference to `ext2fs_clear_bit64'
        out/host/linux-x86/obj/SHARED_LIBRARIES/libext2fs_host_intermediates/gen_bitmap64.o: In function `ext2fs_convert_subcluster_bitmap':
        /home/senrsl/android/source/WORKING_DIRECTORY/external/e2fsprogs/lib/ext2fs/gen_bitmap64.c:735: undefined reference to `ext2fs_get_bitmap_granularity'
        out/host/linux-x86/obj/SHARED_LIBRARIES/libext2fs_host_intermediates/gen_bitmap64.o: In function `ext2fs_find_first_zero_generic_bmap':
        /home/senrsl/android/source/WORKING_DIRECTORY/external/e2fsprogs/lib/ext2fs/gen_bitmap64.c:790: undefined reference to `ext2fs_find_first_zero_generic_bitmap'
        out/host/linux-x86/obj/SHARED_LIBRARIES/libext2fs_host_intermediates/mmp.o: In function `ext2fs_mmp_read':
        /home/senrsl/android/source/WORKING_DIRECTORY/external/e2fsprogs/lib/ext2fs/mmp.c:57: undefined reference to `ext2fs_get_dio_alignment'
        out/host/linux-x86/obj/SHARED_LIBRARIES/libext2fs_host_intermediates/mmp.o: In function `ext2fs_mmp_init':
        /home/senrsl/android/source/WORKING_DIRECTORY/external/e2fsprogs/lib/ext2fs/mmp.c:213: undefined reference to `ext2fs_alloc_block2'
        collect2: ld returned 1 exit status
        make: *** [out/host/linux-x86/obj/lib/libext2fs_host.so] 错误 1
        make: *** 正在等待未完成的任务....
        1 warning generated.
        external/openssl/ssl/s2_clnt.c:1027:38: warning: unused parameter 'type' [-Wunused-parameter]
        int ssl2_set_certificate(SSL *s, int type, int len, const unsigned char *data)
                                             ^
        1 warning generated.
        external/openssl/ssl/s2_lib.c:385:38: warning: unused parameter 'larg' [-Wunused-parameter]
        long ssl2_ctrl(SSL *s, int cmd, long larg, void *parg)
                                             ^
        external/openssl/ssl/s2_lib.c:385:50: warning: unused parameter 'parg' [-Wunused-parameter]
        long ssl2_ctrl(SSL *s, int cmd, long larg, void *parg)
                                                         ^
        external/openssl/ssl/s2_lib.c:400:30: warning: unused parameter 's' [-Wunused-parameter]
        long ssl2_callback_ctrl(SSL *s, int cmd, void (*fp)(void))
                                     ^
        external/openssl/ssl/s2_lib.c:400:37: warning: unused parameter 'cmd' [-Wunused-parameter]
        long ssl2_callback_ctrl(SSL *s, int cmd, void (*fp)(void))
                                            ^
        external/openssl/ssl/s2_lib.c:400:49: warning: unused parameter 'fp' [-Wunused-parameter]
        long ssl2_callback_ctrl(SSL *s, int cmd, void (*fp)(void))
                                                        ^
        external/openssl/ssl/s2_lib.c:405:29: warning: unused parameter 'ctx' [-Wunused-parameter]
        long ssl2_ctx_ctrl(SSL_CTX *ctx, int cmd, long larg, void *parg)
                                    ^
        external/openssl/ssl/s2_lib.c:405:38: warning: unused parameter 'cmd' [-Wunused-parameter]
        long ssl2_ctx_ctrl(SSL_CTX *ctx, int cmd, long larg, void *parg)
                                             ^
        external/openssl/ssl/s2_lib.c:405:48: warning: unused parameter 'larg' [-Wunused-parameter]
        long ssl2_ctx_ctrl(SSL_CTX *ctx, int cmd, long larg, void *parg)
                                                       ^
        external/openssl/ssl/s2_lib.c:405:60: warning: unused parameter 'parg' [-Wunused-parameter]
        long ssl2_ctx_ctrl(SSL_CTX *ctx, int cmd, long larg, void *parg)
                                                                   ^
        external/openssl/ssl/s2_lib.c:410:38: warning: unused parameter 'ctx' [-Wunused-parameter]
        long ssl2_ctx_callback_ctrl(SSL_CTX *ctx, int cmd, void (*fp)(void))
                                             ^
        external/openssl/ssl/s2_lib.c:410:47: warning: unused parameter 'cmd' [-Wunused-parameter]
        long ssl2_ctx_callback_ctrl(SSL_CTX *ctx, int cmd, void (*fp)(void))
                                                      ^
        external/openssl/ssl/s2_lib.c:410:59: warning: unused parameter 'fp' [-Wunused-parameter]
        long ssl2_ctx_callback_ctrl(SSL_CTX *ctx, int cmd, void (*fp)(void))
                                                                  ^
        12 warnings generated.
        1 warning generated.
        make: *** wait: 没有子进程。 停止。
        senrsl@senrsl-ubuntu:~/android/source/WORKING_DIRECTORY$
</code></p>

<p>然后把之前的core.mk第二部分替换成README里的，报错
<code>
        /home/senrsl/android/source/WORKING_DIRECTORY/external/e2fsprogs/lib/ext2fs/mmp.c:57: undefined reference to `ext2fs_get_dio_alignment'
        out/host/linux-x86/obj/SHARED_LIBRARIES/libext2fs_host_intermediates/mmp.o: In function `ext2fs_mmp_init':
        /home/senrsl/android/source/WORKING_DIRECTORY/external/e2fsprogs/lib/ext2fs/mmp.c:213: undefined reference to `ext2fs_alloc_block2'
        collect2: ld returned 1 exit status
        make: *** [out/host/linux-x86/obj/lib/libext2fs_host.so] 错误 1
        make: *** 正在等待未完成的任务....
        Processing target/product/generic/dex_bootjars/system/framework/core.jar
        Done!
</code></p>

<p>然后把core.mk里第二部分全都删掉，报的错还是上面那个。</p>

<p>恢复下core.mk重来，</p>

<p>报1：报错external/webkit/Source/WebCore/make-hash-tools.pl line 23.，core.mk砍掉 libwebcore \ 代码砍掉external/webkit.</p>

<p>报2：/home/senrsl/android/source/WORKING_DIRECTORY/external/e2fsprogs/lib/ext2fs/mmp.c:213: undefined reference to `ext2fs_alloc_block2'，external/e2fsprogs 代码换回原版。</p>

<p>报3：/home/senrsl/android/source/WORKING_DIRECTORY/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.7/bin/../lib/gcc/arm-linux-androideabi/4.7/../../../../arm-linux-androideabi/bin/ld: error: out/target/product/generic/obj/EXECUTABLES/dnsmasq_intermediates/dhcp-common.o: multiple definition of &lsquo;option_string&rsquo;
/home/senrsl/android/source/WORKING_DIRECTORY/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.7/bin/../lib/gcc/arm-linux-androideabi/4.7/../../../../arm-linux-androideabi/bin/ld: out/target/product/generic/obj/EXECUTABLES/dnsmasq_intermediates/option.o: previous definition here，external/dnsmasq换回原版。</p>

<p>然后编译</p>

<p>这样竟编译成功
<code>
        Creating filesystem with parameters:
            Size: 576716800
            Block size: 4096
            Blocks per group: 32768
            Inodes per group: 7040
            Inode size: 256
            Journal blocks: 2200
            Label:
            Blocks: 140800
            Block groups: 5
            Reserved block group size: 39
        Created filesystem with 892/35200 inodes and 65272/140800 blocks
        + '[' 0 -ne 0 ']'
        Install system fs image: out/target/product/generic/system.img
        out/target/product/generic/system.img+ maxsize=588791808 blocksize=2112 total=576716800 reserve=5947392
</code></p>

<p>镜像文件输出到了/home/senrsl/android/source/WORKING_DIRECTORY/out/target /product/generic</p>

<p>4)封包</p>

<p>查看下官方提供的E300LKLUFNE4_E300LLGTFNE4_E300LKLUFNC1_HOME.tar</p>

<p>依次罗列了这几个img.</p>

<p>尝试封装
<code>
        senrsl@senrsl-ubuntu:~/android/source/WORKING_DIRECTORY/out/target/product/generic$ tar cvf p.tar cache.img ramdisk.img system.img userdata.img
        cache.img
        ramdisk.img
        system.img
        userdata.img
</code>
然后重启系统去烧。</p>

<p>//TODO 未成功，无法烧入</p>

<hr />

<h4>I9507V 的external/e2fsprogs，external/dnsmasq换回原版，就能编译成功，没试过烧进真机。</h4>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[编译I9507V内核]]></title>
    <link href="http://abcdxyzk.github.io/blog/2015/01/03/android-I9507V-kernel/"/>
    <updated>2015-01-03T14:52:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2015/01/03/android-I9507V-kernel</id>
    <content type="html"><![CDATA[<p>源码地址 <a href="http://opensource.samsung.com/reception/receptionSub.do?method=sub&amp;sub=F&amp;searchValue=9507">http://opensource.samsung.com/reception/receptionSub.do?method=sub&amp;sub=F&amp;searchValue=9507</a></p>

<p>好像三星android4.3版本后的bootloader会检测是否三星自编译内核，不是的会开机提示一下，不影响正常使用。</p>

<p>按照README_Kernel.txt的做。</p>

<p>内核中说明是用4.7编译器，但是4.7编译出来的装上去会挂，不知道为什么。<br/>
但是换成4.6编译器就没问题。</p>

<p>最后作成boot.img
<code>
    mkbootimg --kernel zImage --ramdisk boot.img-ramdisk.cpio.gz --base 80200000 --ramdisk_offset 1FF8000 --pagesize 2048 --cmdline "console=null androidboot.hardware=qcom user_debug=31 msm_rtb.filter=0x3F ehci-hcd.park=3 maxcpus=4" -o boot.img
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[img.ext4格式]]></title>
    <link href="http://abcdxyzk.github.io/blog/2015/01/03/android-img.ext4/"/>
    <updated>2015-01-03T14:36:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2015/01/03/android-img.ext4</id>
    <content type="html"><![CDATA[<p>工具 <a href="https://github.com/abcdxyzk/ext4_utils">https://github.com/abcdxyzk/ext4_utils</a></p>

<h4>一、转换源文件为ext4格式</h4>

<p>然后，我们可以使用./simg2img src des命令来转换system.img.ext4格式文件了
<code>
    ./simg2img system.img.ext4 system.img
</code></p>

<h4>二、挂载镜像到指定目录</h4>

<p>然后挂载此img到一个目录上
<code>
    mount -o loop system.img sysmain
</code>
成功挂载。然后你就可以进入目录了查看里面的文件了！！！！！</p>

<h4>三、修改镜像内的文件</h4>

<p>这时候可以进入挂载的目录mysys里面查看各个文件，甚至是修改了。不过这时候要注意一点，就是保持文件的原始权限。</p>

<h4>四、打包文件</h4>

<p>当你所有文件搞定后，下来需要一个命令来打包了。
<code>
    ./mkuserimg.sh -s sysmain systest.img.ext4 ext4 tmp 512M
</code>
这里需要注意，temp是我在当前目录新建立的一个目录，后面的512M是这个镜像打包后占用空间大小。如果你不知道你的镜像包应该多大，你查看你景象挂载到目录后，这个景象分区的大小。</p>

<p>恩，当你完成以上步骤，新的systest.img.ext4成功生成了，好了，你可以在fastboot模式下刷入了！！！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[编译努比亚内核]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/12/31/android-nx403a-kernel/"/>
    <updated>2014-12-31T11:00:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/12/31/android-nx403a-kernel</id>
    <content type="html"><![CDATA[<p>源码下载 <a href="http://support.zte.com.cn/support/news/NewsMain.aspx?type=service">http://support.zte.com.cn/support/news/NewsMain.aspx?type=service</a></p>

<p>nx403a在 <a href="http://support.zte.com.cn/support/news/NewsDetail.aspx?newsId=1004862">http://support.zte.com.cn/support/news/NewsDetail.aspx?newsId=1004862</a></p>

<p>先解压zip在合并再解压7z，tar</p>

<p>修改arch/arm/configs/apq8064-nubiamini2_defconfig，加入
CONFIG_LOCALVERSION=&ldquo;-g3720aca-00082-g0ea2092&rdquo;
CONFIG_PRIMA_WLAN=m # 这样子wlan还是起不来</p>

<p>make apq8064-nubiamini2_defconfig
make</p>

<p>make会有些头文件的include错误，看着改改</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android分区]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/12/31/android-base-disk/"/>
    <updated>2014-12-31T11:00:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/12/31/android-base-disk</id>
    <content type="html"><![CDATA[<p><a href="http://blog.csdn.net/kieven2008/article/details/19327907">http://blog.csdn.net/kieven2008/article/details/19327907</a></p>

<p>安卓手机和平板一般包括以下标准内部分区：
<code>
    /boot
    /system
    /recovery
    /data
    /cache
    /misc
</code>
另外还与SD卡分区：
<code>
    /sdcard
    /sd-ext
</code></p>

<h4>system 分区</h4>

<p>这里是挂载到/system目录下的分区。这里有 /system/bin 和 /system/sbin 保存很多系统命令。它是由编译出来的system.img来烧入。</p>

<p>相当于你电脑的C盘，用来放系统。这个分区基本包含了整个安卓操作系统，除了内核（kerne）和ramdisk。包括安卓用户界面、和所有预装的系统应用程序。擦除这个分区，会删除整个安卓系统。你可以通过进入Recovery程序或者bootloader程序中，安装一个新ROM，也就是新安卓系统。</p>

<h4>MISC分区</h4>

<p>这个分区包括了一些杂项内容：比如一些系统设置和系统功能启用禁用设置。这些设置包括CID(运营商或区域识别码）、USB设置和一些硬件设置等等。这是一个很重要的分区，如果此分区损坏或者部分数据丢失，手机的一些特定功能可能不能正常工作。</p>

<h4>recovery分区</h4>

<p>recovery 分区即恢复分区，在正常分区被破坏后，仍可以进入这一分区进行备份和恢复.我的理解是这个分区保存一个简单的OS或底层软件，在Android的内核被破坏后可以用bootloader从这个分区引导进行操作。</p>

<p>这个分区可以认为是一个boot分区的替代品，可以是你的手机进入Recovery程序，进行高级恢复或安卓系统维护工作。</p>

<h4>boot 分区</h4>

<p>一般的嵌入式Linux的设备中.bootloader,内核，根文件系统被分为三个不同分区。在Android做得比较复杂，从这个手机分区和来看，这里boot分区是把内核和ramdisk file的根文件系统打包在一起了，是编译生成boot.img来烧录的。</p>

<p>如果没有这个分区，手机通常无法启动到安卓系统。只有必要的时候，才去通过Recovery软件擦除（format）这个分区，一旦擦除，设备只有再重新安装一个新的boot分区，可以通过安装一个包含boot分区的ROM来实现，否则无法启动安卓系统。</p>

<h4>userdata 分区</h4>

<p>它将挂载到 /data 目录下, 它是由编译出来的userdata.img来烧入。</p>

<p>这个分区也叫用户数据区，包含了用户的数据：联系人、短信、设置、用户安装的程序。擦除这个分区，本质上等同于手机恢复出厂设置，也就是手机系统第一次启动时的状态，或者是最后一次安装官方或第三方ROM后的状态。在Recovery程序中进行的“data/factory reset ”操作就是在擦除这个分区。</p>

<h4>cache 分区</h4>

<p>它将挂载到 /cache 目录下。这个分区是安卓系统缓存区，保存系统最常访问的数据和应用程序。擦除这个分区，不会影响个人数据，只是删除了这个分区中已经保存的缓存内容，缓存内容会在后续手机使用过程中重新自动生成。</p>

<h5>其它隐藏分区：</h5>

<h4>HBOOT</h4>

<p>保存的bootloader HBOOT。手机的启动引导的一段程序。
类似电脑主板BIOS，这部分刷错了手机就会变成砖块。</p>

<h4>Radio分区</h4>

<p>保存是基带芯片的固件代码，Linux不认识其格式，在手机启动时装入特定内存中用于驱动芯片。所有与电信网络交互就是靠它了，一般往往用专用开发环境来开发。手机无线信号、蓝牙、wifi等无线管理。</p>

<h4>splash分区</h4>

<p>这里是启动画面。</p>

<h4>SD卡分区</h4>

<p>一般默认的是挂载在/sdcard目录。</p>

<p>这个分区不是设备系统存储空间，是SD卡空间。从使用上讲，这个是你自己的存储空间，可以随便你任意存放相片、视频、文档、ROM安装包等。擦除这个分区是完全安全的，只要你把分区中你需要的数据都备份到了你的电脑中。虽然一些用户安装的程序会使用这个分区保存它的数据和设置信息，擦除了这个分区，这些程序的数据，比如有些游戏的存档，就会全部丢失。在既有内部SD卡和外部SD卡的设备中，比如三星Galaxy S和一些平板电脑，/sdcard分区通常指向内部SD卡。外部SD卡，如果存在的话，会对应一个新的分区，每个设备都不一样。在三星Galaxy S手机中， /sdcard/sd代表的是外部SD卡，而其它设备，有可能是/sdcard2。与/sdcard不同，没有系统或应用程序数据会自动存放在外部SD卡中。外部SD卡中的所有数据都是用户自己添加进去的。在你把分区中需要的数据都备份到了你的电脑中之后，你可以安全的擦除这个分区。
SD卡扩展分区</p>

<p>它的目录名是 /sd-ext ,它不是一个标准的Android分区，是运行APP2D软件扩展出来分区。目的是为了多扩展一个安装程序空间，这个对于Flash空间（或者说ROM空间）不够，又喜欢安装软件的人是有用应用。</p>

<h3>二.各分区详细分析</h3>

<p>  各个分区的内容，可以用cat命令直接导出，用一般的二进制的软件来分析，我一般用WinHex,并且自己写了几个模板。
  导出分区内容,如果用adb 导出，必须有root权限，
<code>
cat /proc/mounts
rootfs / rootfs ro,relatime 0 0 #根文件系统的格式，只读
tmpfs /dev tmpfs rw,relatime,mode=755 0 0
devpts /dev/pts devpts rw,relatime,mode=600 0 0
proc /proc proc rw,relatime 0 0
sysfs /sys sysfs rw,relatime 0 0
none /acct cgroup rw,relatime,cpuacct 0 0
tmpfs /mnt/asec tmpfs rw,relatime,mode=755,gid=1000 0 0
none /dev/cpuctl cgroup rw,relatime,cpu 0 0
/dev/block/mtdblock3 /system yaffs2 ro,relatime 0 0 #system分区,只读
/dev/block/mtdblock5 /data yaffs2 rw,nosuid,nodev,relatime 0 0 #data分区，可读写
/dev/block/mtdblock4 /cache yaffs2 rw,nosuid,nodev,relatime 0 0 #cache分区，可读写
</code></p>

<ol>
<li><a href="http://bbs.hiapk.com/thread-1446706-1-1.html">http://bbs.hiapk.com/thread-1446706-1-1.html</a></li>
<li><a href="http://www.addictivetips.com/mobile/android-partitions-explained-boot-system-recovery-data-cache-misc/">http://www.addictivetips.com/mobile/android-partitions-explained-boot-system-recovery-data-cache-misc/</a></li>
<li><a href="http://www.addictivetips.com/mobile/what-is-clockworkmod-recovery-and-how-to-use-it-on-android-complete-guide/">http://www.addictivetips.com/mobile/what-is-clockworkmod-recovery-and-how-to-use-it-on-android-complete-guide/</a></li>
</ol>

]]></content>
  </entry>
  
</feed>
