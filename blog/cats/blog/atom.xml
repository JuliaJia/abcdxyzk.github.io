<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: blog | kk Blog —— 通用基础]]></title>
  <link href="http://abcdxyzk.github.io/blog/cats/blog/atom.xml" rel="self"/>
  <link href="http://abcdxyzk.github.io/"/>
  <updated>2014-12-14T16:05:16+08:00</updated>
  <id>http://abcdxyzk.github.io/</id>
  <author>
    <name><![CDATA[kk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ruby字符串处理函数]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/12/14/blog-ruby-string/"/>
    <updated>2014-12-14T15:15:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/12/14/blog-ruby-string</id>
    <content type="html"><![CDATA[<h5>1.返回字符串的长度</h5>

<pre><code>str.length =&gt; integer
</code></pre>

<h5>2.字符串索引index</h5>

<pre><code>str.index(substring [, offset])   =&gt; fixnum or nil
str.index(fixnum [, offset])      =&gt; fixnum or nil
str.index(regexp [, offset])      =&gt; fixnum or nil

Returns the index of the first occurrence of the given substring, character (fixnum), 
or pattern (regexp) in str. Returns nil if not found. If the second parameter is present, 
it specifies the position in the string to begin the search.

   "hello".index('e')             #=&gt; 1
   "hello".index('lo')            #=&gt; 3
   "hello".index('a')             #=&gt; nil
   "hello".index(101)             #=&gt; 1
   "hello".index(/[aeiou]/, -3)   #=&gt; 4
</code></pre>

<h6>从尾到头rindex</h6>

<pre><code>str.rindex(substring [, fixnum])   =&gt; fixnum or nil
str.rindex(fixnum [, fixnum])   =&gt; fixnum or nil
str.rindex(regexp [, fixnum])   =&gt; fixnum or nil

Returns the index of the last occurrence of the given substring, character (fixnum), 
or pattern (regexp) in str. Returns nil if not found. If the second parameter is present, 
it specifies the position in the string to end the search---characters beyond this point will not be considered.

   "hello".rindex('e')             #=&gt; 1
   "hello".rindex('l')             #=&gt; 3
   "hello".rindex('a')             #=&gt; nil
   "hello".rindex(101)             #=&gt; 1
   "hello".rindex(/[aeiou]/, -2)   #=&gt; 1
</code></pre>

<h5>3.判断字符串中是否包含另一个串</h5>

<pre><code>str.include? other_str =&gt; true or false
"hello".include? "lo"   #=&gt; true
"hello".include? "ol"   #=&gt; false
"hello".include? ?h     #=&gt; true
</code></pre>

<h5>4.字符串插入</h5>

<pre><code>str.insert(index, other_str) =&gt; str
"abcd".insert(0, 'X')    #=&gt; "Xabcd"
"abcd".insert(3, 'X')    #=&gt; "abcXd"
"abcd".insert(4, 'X')    #=&gt; "abcdX"
"abcd".insert(-3, 'X')
-3, 'X')   #=&gt; "abXcd"
"abcd".insert(-1, 'X')   #=&gt; "abcdX"
</code></pre>

<h5>5.字符串分隔,默认分隔符为空格</h5>

<pre><code>str.split(pattern=$;, [limit]) =&gt; anArray
" now's the time".split        #=&gt; ["now's", "the", "time"]
"1, 2.34,56, 7".split(%r{,\s*}) #=&gt; ["1", "2.34", "56", "7"]
"hello".split(//)               #=&gt; ["h", "e", "l", "l", "o"]
"hello".split(//, 3)            #=&gt; ["h", "e", "llo"]
"hi mom".split(%r{\s*})         #=&gt; ["h", "i", "m", "o", "m"]
"mellow yellow".split("ello")   #=&gt; ["m", "w y", "w"]
"1,2,,3,4,,".split(',')         #=&gt; ["1", "2", "", "3", "4"]
"1,2,,3,4,,".split(',', 4)      #=&gt; ["1", "2", "", "3,4,,"]
</code></pre>

<h5>6.字符串替换</h5>

<pre><code>str.gsub(pattern, replacement) =&gt; new_str
str.gsub(pattern) {|match| block } =&gt; new_str
"hello".gsub(/[aeiou]/, '*')              #=&gt; "h*ll*"     #将元音替换成*号
"hello".gsub(/([aeiou])/, '&lt;\1&gt;')         #=&gt; "h&lt;e&gt;ll&lt;o&gt;"   #将元音加上尖括号,\1表示保留原有字符???
"hello".gsub(/./) {|s| s[0].to_s + ' '}   #=&gt; "104 101 108 108 111 "
</code></pre>

<p>ruby中带“!&ldquo;和不带&rdquo;!&ldquo;的方法的最大的区别就是带”!"的会改变调用对象本身了。比方说str.gsub(/a/, &lsquo;b&rsquo;)，不会改变str本身，只会返回一个新的str。而str.gsub!(/a/, &lsquo;b&rsquo;)就会把str本身给改了。<br/>
但是gsub和gsub!还有另外一个不同点就是，gsub不管怎么样都会返回一个新的字符串，而gsub!只有在有字符被替换的情况下才会返回一个新的字符串，假如说没有任何字符被替换，gsub!只会返回nil.</p>

<h6>字符串替换二:</h6>

<pre><code>str.replace(other_str) =&gt; str
s = "hello"         #=&gt; "hello"
s.replace "world"   #=&gt; "world"
</code></pre>

<h5>7.字符串删除:</h5>

<pre><code>str.delete([other_str]+) =&gt; new_str
"hello".delete "l","lo"        #=&gt; "heo"
"hello".delete "lo"            #=&gt; "he"
"hello".delete "aeiou", "^e"   #=&gt; "hell"
"hello".delete "ej-m"          #=&gt; "ho"
</code></pre>

<h5>8.去掉前和后的空格</h5>

<pre><code>str.lstrip =&gt; new_str
" hello ".lstrip   #=&gt; "hello "
"hello".lstrip       #=&gt; "hello"
</code></pre>

<h5>9.字符串匹配</h5>

<pre><code>str.match(pattern) =&gt; matchdata or nil
</code></pre>

<h5>10.字符串反转</h5>

<pre><code>str.reverse =&gt; new_str
"stressed".reverse   #=&gt; "desserts"
</code></pre>

<h5>11.去掉重复的字符</h5>

<pre><code>str.squeeze([other_str]*) =&gt; new_str
"yellow moon".squeeze                  #=&gt; "yelow mon" #默认去掉串中所有重复的字符
" now   is the".squeeze(" ")         #=&gt; " now is the" #去掉串中重复的空格
"putters shoot balls".squeeze("m-z")   #=&gt; "puters shot balls" #去掉指定范围内的重复字符
</code></pre>

<h5>12.转化成数字</h5>

<pre><code>str.to_i=&gt; str
"12345".to_i             #=&gt; 12345
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ruby基础]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/12/14/blog-ruby-base/"/>
    <updated>2014-12-14T14:55:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/12/14/blog-ruby-base</id>
    <content type="html"><![CDATA[<h4>Find</h4>

<p><a href="http://ruby-doc.org/stdlib-1.9.3/libdoc/find/rdoc/Find.html">http://ruby-doc.org/stdlib-1.9.3/libdoc/find/rdoc/Find.html</a></p>

<pre><code>require 'find'
total_size = 0
Find.find(ENV["HOME"]) do |path|
  if FileTest.directory?(path)
    if File.basename(path)[0] == ?.
      Find.prune       # Don't look any further into this directory.
    else
      next
    end
  else
    total_size += FileTest.size(path)
  end
end
</code></pre>

<h4>Time</h4>

<pre><code>p Time.parse(“2002-03-17”)       #=&gt; Sun Mar 17 00:00:00 +0800[v2] 2002
p Time.now        # =&gt;Mon Oct 20 06:02:10 JST 2003
p Time.now.to_a      # =&gt; [10, 2, 6, 20, 10, 2003, 1, 293,false, "JST"]
p Time.now.to_f      # =&gt; 1418540681.0154862
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[liquid用法笔记]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/12/14/blog-jekyll-liquid/"/>
    <updated>2014-12-14T14:54:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/12/14/blog-jekyll-liquid</id>
    <content type="html"><![CDATA[<p><a href="http://blog.csdn.net/dont27/article/details/38097581">原文</a></p>

<ul>
<li>注意本文代码中的 <code>{ {</code>,<code>{ %</code>,<code>% }</code>,<code>} }</code>,<code>{ { {</code>,<code>} } }</code> 中间的空格都要去掉才能执行</li>
</ul>


<p>在折腾github上博客的时候, 遇到一些jekyll, 正确来说应该是Liquid用法的问题。
于是一系列搜索之后终于找到了比较容易理解的<a href="https://github.com/Shopify/liquid/wiki/Liquid-for-Designers">文档>></a></p>

<p>关于Liquid的语法使用，看完一遍，就能愉快的在github上继续折腾博客了。有些看不大懂，没翻译，都是自己的见解，有些根本用不上就不解释了。</p>

<h5>Liquid有两种标记类型： Output 和 Tag.</h5>

<p>  Output标记，用于输出文本，格式采用 <code>{ { 两个尖括号包围 } }</code><br/>
  Tag标记，用于执行命令或者处理 格式: <code>{ % 一对尖括号内一对百分号 % }</code></p>

<p>我的见解是: 类比jsp格式, Output相当于 &lt;%=variable>，即输出变量值;<br/>
Tag相当于&lt;% int i=2 ;%>,一种数据处理,但不做输出效果.</p>

<h4>Output</h4>

<p>例子:
<code>
Hello { {name} }
Hello { {user.name} }
Hello { { 'tobi' } }
</code></p>

<h5>高级Output: Filters//过滤器</h5>

<p>Filters过滤器,数据处理的操作方法.<br/>
过滤器的第一个参数，往往是过滤器运算符'|&lsquo;左边的Output，而过滤器的返回值，是通过过滤运算符右边的操作所得到的，过滤器可以叠加操作，最终得到该Output所要输出的值。(这段我见解，翻译不过来 = =)<br/>
如下：<br/>
<code>
Hello { { 'tobi' | upcase } }
Hello tobi has { { 'tobi' | size } } letters!
Hello { { 'now' | date: "%Y %h" } }
</code></p>

<h5>标准过滤器</h5>

<pre><code>    date - 格式化时间
    capitalize - 输出字符串，字符串（句子）首字母大写 e.g. 假设tb为"hello world"{ { tb|capitalize } } #=&gt; 'Hello world'
    downcase - 转换小写
    upcase - 转换大写
    first - 获取数组的第一个元素
    last - 获取数组的最后一个元素
    join - 用指定的字符拼接数组元素
    sort - 排序数组
    map - map/collect an array on a given property
    size - 返回数组大小
    escape - 转移字符串
    escape_once - returns an escaped version of html without affecting existing escaped entities
    strip_html - 除去字符串中的html标签?
    strip_newlines - 除去字符串中的回车?
    newline_to_br - 将所有的回车"\n" 转换成"&lt;br /&gt;"?
    replace - 替换所有匹配内容 e.g.{ { 'forfor' | replace:'for', 'bar' } } #=&gt; 'barbar'
    replace_first - 替换第一个匹配内容 e.g.{ { 'forfor' | replace_first:'for', 'bar' } } #=&gt; 'barfor'
    remove - 移除所有匹配内容 e.g.{ { 'forbarforbar' | remove:'for'} } #=&gt; 'barbar'
    remove_first - 移除第一个匹配内容 e.g.{ { 'forbarforbar' | remove_first:'for'} } #=&gt; 'barforbar'
    truncate - truncate a string down to x characters
    truncatewords - truncate a string down to x words
    prepend - 在字符串前面加上内容 e.g.{ {'bar'|prepend:'far'} } #=&gt; 'farbar'
    append - 字符串后面加上内容 e.g.{ {'bar'|append: 'foo'} }#=&gt; 'barfoo'
    minus - 减法 e.g. { {4|minus:2} } #=&gt;2
    plus - 加法 e.g. { { 4|plus:2} } #=&gt; 6
    times - 乘法 e.g. { {10|times:2} } #=&gt; 20
    divided_by - 除法 e.g. { { 10 | divided_by:2} } #=&gt; 5
    split - 分割字符串 e.g.{ { "a~b" | split:'~'} } #=&gt; ['a','b']
    modulo - 取余 e.g. { { 3 | modulo:2 } } #=&gt; 1
</code></pre>

<h4>Tags</h4>

<p>Tag在模板中起到处理逻辑的作用。<br/>
下面是目前支持的Tag:
<code>
    assign - 定义变量 e.g. { % assign tt = 1 % } 定义了变量tt数值为1
    capture - Block tag为变量赋值 e.g.{ % capture dont % }{ { tt } }{ % endcapture % } 将tt的值赋给 dont
    case - Block tag its the standard case...when block
    comment - Block tag 注释
    cycle - Cycle is usually used within a loop to alternate between values, like colors or DOM classes.
    for - for循环block
    if - 判断block
    include - 引入模板
    raw - 转义内容tag e.g.{ % raw % }{ { this } }{ % endraw% } #=&gt; '{ { this } }'
    unless - Mirror of if statement
</code></p>

<h5>Comments</h5>

<p>注释隐藏
<code>
We made 1 million dollars { % comment % } in losses { % endcomment % } this year
Raw
</code>
当包裹内容出现冲突语法时，不会执行其处理。
<code>
    { % raw % }
      In Handlebars, { { this } } will be HTML-escaped, but { { { that } } } will not.
    { % endraw % }
</code></p>

<h5>if/else</h5>

<p>e.g.
<code>
    { % if user % }
      Hello { { user.name } }
    { % endif % }
</code>
<code>
    # Same as above
    { % if user != null % }
      Hello { { user.name } }
    { % endif % }
</code></p>

<pre><code>    { % if user.name != 'tobi' % }
      Hello non-tobi
    { % endif % }
</code></pre>

<pre><code>    # Same as above
    { % unless user.name == 'tobi' % }
      Hello non-tobi
    { % endunless % }
</code></pre>

<pre><code>    { % if user.payments.size &gt; 0  % }
       you paid !
    { % endif % }
</code></pre>

<h5>Case Statement</h5>

<p>多条件
<code>
    { % case condition % }
    { % when 1 % }
    hit 1
    { % when 2 or 3 % }
    hit 2 or 3
    { % else % }
    ... else ...
    { % endcase % }
</code>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{ % case template % }&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;{ % when 'label' % }
</span><span class='line'> // { { label.title } }
</span><span class='line'>{ % when 'product' % }
</span><span class='line'> // { { product.vendor | link_to_vendor } } / { { product.title } }
</span><span class='line'>{ % else % }
</span><span class='line'> // { {page_title} }
</span><span class='line'>{ % endcase % }
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;
</span><span class='line'>##### Cycle
</span><span class='line'>循环列举
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;{ % cycle 'one', 'two', 'three' % }
</span><span class='line'>{ % cycle 'one', 'two', 'three' % }
</span><span class='line'>{ % cycle 'one', 'two', 'three' % }
</span><span class='line'>{ % cycle 'one', 'two', 'three' % }
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;结果：
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;one
</span><span class='line'>two
</span><span class='line'>three
</span><span class='line'>one
</span><span class='line'>&lt;code&gt;
</span><span class='line'>可以通过命名分组：
</span><span class='line'>&lt;/code&gt;
</span><span class='line'>{ % cycle &lsquo;group 1&rsquo;: &lsquo;one&rsquo;, &lsquo;two&rsquo;, &lsquo;three&rsquo; % }
</span><span class='line'>{ % cycle &lsquo;group 1&rsquo;: &lsquo;one&rsquo;, &lsquo;two&rsquo;, &lsquo;three&rsquo; % }
</span><span class='line'>{ % cycle &lsquo;group 2&rsquo;: &lsquo;one&rsquo;, &lsquo;two&rsquo;, &lsquo;three&rsquo; % }
</span><span class='line'>{ % cycle &lsquo;group 2&rsquo;: &lsquo;one&rsquo;, &lsquo;two&rsquo;, &lsquo;three&rsquo; % }
</span><span class='line'>&lt;code&gt;
</span><span class='line'>结果：
</span><span class='line'>&lt;/code&gt;
</span><span class='line'>one
</span><span class='line'>two
</span><span class='line'>one
</span><span class='line'>two</span></code></pre></td></tr></table></div></figure></p>

<h5>for 循环</h5>

<p>循环集合：
<code>
    { % for item in array % }
      { { item } }
    { % endfor % }
</code>
遍历hash时：item[0]包含键，item[1]包含值
<code>
    { % for item in hash % }
      { { item[0] } }: { { item[1] } }
    { % endfor % }
</code>
for循环时，下列变量可以辅助使用：
<code>
forloop.length      # =&gt; length of the entire for loop
forloop.index       # =&gt; index of the current iteration
forloop.index0      # =&gt; index of the current iteration (zero based)
forloop.rindex      # =&gt; how many items are still left?
forloop.rindex0     # =&gt; how many items are still left? (zero based)
forloop.first       # =&gt; is this the first iteration?
forloop.last        # =&gt; is this the last iteration?
</code>
还有一些变量可以用来处理循环时选择性处理：<br/>
limit:int - 限制遍历个数<br/>
offset:int - 从第n个数开始遍历
<code>
    # array = [1,2,3,4,5,6]
    { % for item in array limit:2 offset:2 % }
      { { item } }
    { % endfor % }
    # results in 3,4
</code>
反序遍历：
<code>
    { % for item in collection reversed % }
    { {item} }
    { % endfor % }
</code>
除了遍历集合，还可以定义一个范围的数字来遍历：
<code>
    # if item.quantity is 4...
    { % for i in (1..item.quantity) % }
      { { i } }
    { % endfor % }
    # results in 1,2,3,4
</code></p>

<h5>变量赋值</h5>

<p>赋值变量：
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
<span class='line-number'>256</span>
<span class='line-number'>257</span>
<span class='line-number'>258</span>
<span class='line-number'>259</span>
<span class='line-number'>260</span>
<span class='line-number'>261</span>
<span class='line-number'>262</span>
<span class='line-number'>263</span>
<span class='line-number'>264</span>
<span class='line-number'>265</span>
<span class='line-number'>266</span>
<span class='line-number'>267</span>
<span class='line-number'>268</span>
<span class='line-number'>269</span>
<span class='line-number'>270</span>
<span class='line-number'>271</span>
<span class='line-number'>272</span>
<span class='line-number'>273</span>
<span class='line-number'>274</span>
<span class='line-number'>275</span>
<span class='line-number'>276</span>
<span class='line-number'>277</span>
<span class='line-number'>278</span>
<span class='line-number'>279</span>
<span class='line-number'>280</span>
<span class='line-number'>281</span>
<span class='line-number'>282</span>
<span class='line-number'>283</span>
<span class='line-number'>284</span>
<span class='line-number'>285</span>
<span class='line-number'>286</span>
<span class='line-number'>287</span>
<span class='line-number'>288</span>
<span class='line-number'>289</span>
<span class='line-number'>290</span>
<span class='line-number'>291</span>
<span class='line-number'>292</span>
<span class='line-number'>293</span>
<span class='line-number'>294</span>
<span class='line-number'>295</span>
<span class='line-number'>296</span>
<span class='line-number'>297</span>
<span class='line-number'>298</span>
<span class='line-number'>299</span>
<span class='line-number'>300</span>
<span class='line-number'>301</span>
<span class='line-number'>302</span>
<span class='line-number'>303</span>
<span class='line-number'>304</span>
<span class='line-number'>305</span>
<span class='line-number'>306</span>
<span class='line-number'>307</span>
<span class='line-number'>308</span>
<span class='line-number'>309</span>
<span class='line-number'>310</span>
<span class='line-number'>311</span>
<span class='line-number'>312</span>
<span class='line-number'>313</span>
<span class='line-number'>314</span>
<span class='line-number'>315</span>
<span class='line-number'>316</span>
<span class='line-number'>317</span>
<span class='line-number'>318</span>
<span class='line-number'>319</span>
<span class='line-number'>320</span>
<span class='line-number'>321</span>
<span class='line-number'>322</span>
<span class='line-number'>323</span>
<span class='line-number'>324</span>
<span class='line-number'>325</span>
<span class='line-number'>326</span>
<span class='line-number'>327</span>
<span class='line-number'>328</span>
<span class='line-number'>329</span>
<span class='line-number'>330</span>
<span class='line-number'>331</span>
<span class='line-number'>332</span>
<span class='line-number'>333</span>
<span class='line-number'>334</span>
<span class='line-number'>335</span>
<span class='line-number'>336</span>
<span class='line-number'>337</span>
<span class='line-number'>338</span>
<span class='line-number'>339</span>
<span class='line-number'>340</span>
<span class='line-number'>341</span>
<span class='line-number'>342</span>
<span class='line-number'>343</span>
<span class='line-number'>344</span>
<span class='line-number'>345</span>
<span class='line-number'>346</span>
<span class='line-number'>347</span>
<span class='line-number'>348</span>
<span class='line-number'>349</span>
<span class='line-number'>350</span>
<span class='line-number'>351</span>
<span class='line-number'>352</span>
<span class='line-number'>353</span>
<span class='line-number'>354</span>
<span class='line-number'>355</span>
<span class='line-number'>356</span>
<span class='line-number'>357</span>
<span class='line-number'>358</span>
<span class='line-number'>359</span>
<span class='line-number'>360</span>
<span class='line-number'>361</span>
<span class='line-number'>362</span>
<span class='line-number'>363</span>
<span class='line-number'>364</span>
<span class='line-number'>365</span>
<span class='line-number'>366</span>
<span class='line-number'>367</span>
<span class='line-number'>368</span>
<span class='line-number'>369</span>
<span class='line-number'>370</span>
<span class='line-number'>371</span>
<span class='line-number'>372</span>
<span class='line-number'>373</span>
<span class='line-number'>374</span>
<span class='line-number'>375</span>
<span class='line-number'>376</span>
<span class='line-number'>377</span>
<span class='line-number'>378</span>
<span class='line-number'>379</span>
<span class='line-number'>380</span>
<span class='line-number'>381</span>
<span class='line-number'>382</span>
<span class='line-number'>383</span>
<span class='line-number'>384</span>
<span class='line-number'>385</span>
<span class='line-number'>386</span>
<span class='line-number'>387</span>
<span class='line-number'>388</span>
<span class='line-number'>389</span>
<span class='line-number'>390</span>
<span class='line-number'>391</span>
<span class='line-number'>392</span>
<span class='line-number'>393</span>
<span class='line-number'>394</span>
<span class='line-number'>395</span>
<span class='line-number'>396</span>
<span class='line-number'>397</span>
<span class='line-number'>398</span>
<span class='line-number'>399</span>
<span class='line-number'>400</span>
<span class='line-number'>401</span>
<span class='line-number'>402</span>
<span class='line-number'>403</span>
<span class='line-number'>404</span>
<span class='line-number'>405</span>
<span class='line-number'>406</span>
<span class='line-number'>407</span>
<span class='line-number'>408</span>
<span class='line-number'>409</span>
<span class='line-number'>410</span>
<span class='line-number'>411</span>
<span class='line-number'>412</span>
<span class='line-number'>413</span>
<span class='line-number'>414</span>
<span class='line-number'>415</span>
<span class='line-number'>416</span>
<span class='line-number'>417</span>
<span class='line-number'>418</span>
<span class='line-number'>419</span>
<span class='line-number'>420</span>
<span class='line-number'>421</span>
<span class='line-number'>422</span>
<span class='line-number'>423</span>
<span class='line-number'>424</span>
<span class='line-number'>425</span>
<span class='line-number'>426</span>
<span class='line-number'>427</span>
<span class='line-number'>428</span>
<span class='line-number'>429</span>
<span class='line-number'>430</span>
<span class='line-number'>431</span>
<span class='line-number'>432</span>
<span class='line-number'>433</span>
<span class='line-number'>434</span>
<span class='line-number'>435</span>
<span class='line-number'>436</span>
<span class='line-number'>437</span>
<span class='line-number'>438</span>
<span class='line-number'>439</span>
<span class='line-number'>440</span>
<span class='line-number'>441</span>
<span class='line-number'>442</span>
<span class='line-number'>443</span>
<span class='line-number'>444</span>
<span class='line-number'>445</span>
<span class='line-number'>446</span>
<span class='line-number'>447</span>
<span class='line-number'>448</span>
<span class='line-number'>449</span>
<span class='line-number'>450</span>
<span class='line-number'>451</span>
<span class='line-number'>452</span>
<span class='line-number'>453</span>
<span class='line-number'>454</span>
<span class='line-number'>455</span>
<span class='line-number'>456</span>
<span class='line-number'>457</span>
<span class='line-number'>458</span>
<span class='line-number'>459</span>
<span class='line-number'>460</span>
<span class='line-number'>461</span>
<span class='line-number'>462</span>
<span class='line-number'>463</span>
<span class='line-number'>464</span>
<span class='line-number'>465</span>
<span class='line-number'>466</span>
<span class='line-number'>467</span>
<span class='line-number'>468</span>
<span class='line-number'>469</span>
<span class='line-number'>470</span>
<span class='line-number'>471</span>
<span class='line-number'>472</span>
<span class='line-number'>473</span>
<span class='line-number'>474</span>
<span class='line-number'>475</span>
<span class='line-number'>476</span>
<span class='line-number'>477</span>
<span class='line-number'>478</span>
<span class='line-number'>479</span>
<span class='line-number'>480</span>
<span class='line-number'>481</span>
<span class='line-number'>482</span>
<span class='line-number'>483</span>
<span class='line-number'>484</span>
<span class='line-number'>485</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>{ % assign name = &lsquo;freestyle&rsquo; % }&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;{ % for t in collections.tags % }{ % if t == name % }
</span><span class='line'>  &lt;p&gt;Freestyle!&lt;/p&gt;
</span><span class='line'>{ % endif % }{ % endfor % }
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;还可以赋值布尔值：
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;{ % assign freestyle = false % }
</span><span class='line'>
</span><span class='line'>{ % for t in collections.tags % }{ % if t == 'freestyle' % }
</span><span class='line'>  { % assign freestyle = true % }
</span><span class='line'>{ % endif % }{ % endfor % }
</span><span class='line'>
</span><span class='line'>{ % if freestyle % }
</span><span class='line'>  &lt;p&gt;Freestyle!&lt;/p&gt;
</span><span class='line'>{ % endif % }
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;赋值处理过的数据：可以用capture
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;{ % capture attribute_name % }{ { item.title | handleize } }-{ { i } }-color{ % endcapture % }
</span><span class='line'>
</span><span class='line'>  &lt;label for="{ { attribute_name } }"&gt;Color:&lt;/label&gt;
</span><span class='line'>  &lt;select name="attributes[{ { attribute_name } }]" id="{ { attribute_name } }"&gt;
</span><span class='line'>&lt;option value="red"&gt;Red&lt;/option&gt;
</span><span class='line'>&lt;option value="green"&gt;Green&lt;/option&gt;
</span><span class='line'>&lt;option value="blue"&gt;Blue&lt;/option&gt;
</span><span class='line'>  &lt;/select&gt;
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;```&lt;/p&gt;
</span><span class='line'>]]&gt;&lt;/content&gt;
</span><span class='line'>  &lt;/entry&gt;
</span><span class='line'>  
</span><span class='line'>  &lt;entry&gt;
</span><span class='line'>&lt;title type="html"&gt;&lt;![CDATA[jekyll的一些全局变量]]&gt;&lt;/title&gt;
</span><span class='line'>&lt;link href="http://abcdxyzk.github.io/blog/2014/11/27/blog-octopress-jekyll/"/&gt;
</span><span class='line'>&lt;updated&gt;2014-11-27T13:30:00+08:00&lt;/updated&gt;
</span><span class='line'>&lt;id&gt;http://abcdxyzk.github.io/blog/2014/11/27/blog-octopress-jekyll&lt;/id&gt;
</span><span class='line'>&lt;content type="html"&gt;&lt;![CDATA[&lt;p&gt;&lt;a href="http://jekyllrb.com/docs/variables/"&gt;http://jekyllrb.com/docs/variables/&lt;/a&gt;&lt;br/&gt;
</span><span class='line'>octopress是基于jekyll，所以也可以用这些内容&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h4&gt;Variables&lt;/h4&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Jekyll traverses your site looking for files to process. Any files with YAML front matter are subject to processing. For each of these files, Jekyll makes a variety of data available via the Liquid templating system. The following is a reference of the available data.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h5&gt;Global Variables&lt;/h5&gt;
</span><span class='line'>
</span><span class='line'>&lt;table&gt;
</span><span class='line'>  &lt;thead&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;th&gt;Variable&lt;/th&gt;
</span><span class='line'>  &lt;th&gt;Description&lt;/th&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>  &lt;/thead&gt;
</span><span class='line'>  &lt;tbody&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;site&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;
</span><span class='line'>      Sitewide information + configuration settings from
</span><span class='line'>      _config.yml. See below for details.
</span><span class='line'>  &lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;page&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;
</span><span class='line'>    Page specific information + the &lt;a href="../frontmatter/"&gt;YAML front
</span><span class='line'>    matter&lt;/a&gt;. Custom variables set via the YAML Front Matter will be
</span><span class='line'>    available here. See below for details.
</span><span class='line'>  &lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;content&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;
</span><span class='line'>    In layout files, the rendered content of the Post or Page being wrapped.
</span><span class='line'>    Not defined in Post or Page files.
</span><span class='line'>  &lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;paginator&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;
</span><span class='line'>    When the paginate configuration option is set, this
</span><span class='line'>    variable becomes available for use. 
</span><span class='line'>  &lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>  &lt;/tbody&gt;
</span><span class='line'>&lt;/table&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;h5&gt;Site Variables&lt;/h5&gt;
</span><span class='line'>
</span><span class='line'>&lt;table&gt;
</span><span class='line'>  &lt;thead&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;th&gt;Variable&lt;/th&gt;
</span><span class='line'>  &lt;th&gt;Description&lt;/th&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>  &lt;/thead&gt;
</span><span class='line'>  &lt;tbody&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;site.time&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;
</span><span class='line'>    The current time (when you run the jekyll command).
</span><span class='line'>  &lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;site.pages&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;
</span><span class='line'>    A list of all Pages.
</span><span class='line'>  &lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;site.posts&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;
</span><span class='line'>    A reverse chronological list of all Posts.
</span><span class='line'>  &lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;site.related_posts&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;
</span><span class='line'>    If the page being processed is a Post, this contains a list of up to ten
</span><span class='line'>    related Posts. By default, these are low quality but fast to compute.
</span><span class='line'>    For high quality but slow to compute results, run the
</span><span class='line'>    jekyll command with the --lsi (latent semantic
</span><span class='line'>    indexing) option.
</span><span class='line'>  &lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;site.static_files&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;
</span><span class='line'>    A list of all static files (i.e. files not processed by Jekyll's
</span><span class='line'>    converters or the Liquid renderer). Each file has three properties:
</span><span class='line'>    path, modified_time and extname.
</span><span class='line'>  &lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;site.html_pages&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;
</span><span class='line'>    A list of all HTML Pages.
</span><span class='line'>  &lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;site.collections&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;
</span><span class='line'>    A list of all the collections.
</span><span class='line'>  &lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;site.data&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;
</span><span class='line'>    A list containing the data loaded from the YAML files located in the _data directory.
</span><span class='line'>  &lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;site.documents&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;
</span><span class='line'>    A list of all the documents in every collection.
</span><span class='line'>  &lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;site.categories.CATEGORY&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;
</span><span class='line'>    The list of all Posts in category CATEGORY.
</span><span class='line'>  &lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;site.tags.TAG&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;
</span><span class='line'>    The list of all Posts with tag TAG.
</span><span class='line'>  &lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;site.[CONFIGURATION_DATA]&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;
</span><span class='line'>    All the variables set via the command line and your
</span><span class='line'>    _config.yml are available through the site
</span><span class='line'>    variable. For example, if you have url: http://mysite.com
</span><span class='line'>    in your configuration file, then in your Posts and Pages it will be
</span><span class='line'>    stored in site.url. Jekyll does not parse changes to
</span><span class='line'>    _config.yml in watch mode, you must restart
</span><span class='line'>    Jekyll to see changes to variables.
</span><span class='line'>  &lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>  &lt;/tbody&gt;
</span><span class='line'>&lt;/table&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;h5&gt;Page Variables&lt;/h5&gt;
</span><span class='line'>
</span><span class='line'>&lt;table&gt;
</span><span class='line'>  &lt;thead&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;th&gt;Variable&lt;/th&gt;
</span><span class='line'>  &lt;th&gt;Description&lt;/th&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>  &lt;/thead&gt;
</span><span class='line'>  &lt;tbody&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;page.content&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;
</span><span class='line'>    The content of the Page, rendered or un-rendered depending upon
</span><span class='line'>    what Liquid is being processed and what page is.
</span><span class='line'>  &lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;page.title&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;
</span><span class='line'>    The title of the Page.
</span><span class='line'>  &lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;page.excerpt&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;
</span><span class='line'>    The un-rendered excerpt of the Page.
</span><span class='line'>  &lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;page.url&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;
</span><span class='line'>    The URL of the Post without the domain, but
</span><span class='line'>    with a leading slash, e.g.
</span><span class='line'>    /2008/12/14/my-post.html
</span><span class='line'>  &lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;page.date&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;
</span><span class='line'>    The Date assigned to the Post. This can be overridden in a Post’s front
</span><span class='line'>    matter by specifying a new date/time in the format
</span><span class='line'>    YYYY-MM-DD HH:MM:SS (assuming UTC), or
</span><span class='line'>    YYYY-MM-DD HH:MM:SS +/-TTTT (to specify a time zone using
</span><span class='line'>    an offset from UTC. e.g. 2008-12-14 10:30:00 +0900).
</span><span class='line'>  &lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;page.id&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;
</span><span class='line'>    An identifier unique to the Post (useful in RSS feeds). e.g.
</span><span class='line'>    /2008/12/14/my-post
</span><span class='line'>  &lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;page.categories&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;
</span><span class='line'>    The list of categories to which this post belongs. Categories are
</span><span class='line'>    derived from the directory structure above the _posts
</span><span class='line'>    directory. For example, a post at
</span><span class='line'>    /work/code/_posts/2008-12-24-closures.md would have this
</span><span class='line'>    field set to ['work', 'code']. These can also be specified
</span><span class='line'>    in the &lt;a href="../frontmatter/"&gt;YAML Front Matter&lt;/a&gt;.
</span><span class='line'>  &lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;page.tags&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;
</span><span class='line'>    The list of tags to which this post belongs. These can be specified in
</span><span class='line'>    the &lt;a href="../frontmatter/"&gt;YAML Front Matter&lt;/a&gt;.
</span><span class='line'>  &lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;page.path&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;
</span><span class='line'>    The path to the raw post or page. Example usage: Linking back to the
</span><span class='line'>    page or post’s source on GitHub. This can be overridden in the
</span><span class='line'>    &lt;a href="../frontmatter/"&gt;YAML Front Matter&lt;/a&gt;.
</span><span class='line'>  &lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;page.next&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;
</span><span class='line'>    The next post relative to the position of the current post in
</span><span class='line'>    site.posts. Returns nil for the last entry.
</span><span class='line'>  &lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;page.previous&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;
</span><span class='line'>    The previous post relative to the position of the current post in
</span><span class='line'>    site.posts. Returns nil for the first entry.
</span><span class='line'>  &lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>  &lt;/tbody&gt;
</span><span class='line'>&lt;/table&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;h5&gt;Paginator&lt;/h5&gt;
</span><span class='line'>
</span><span class='line'>&lt;table&gt;
</span><span class='line'>  &lt;thead&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;th&gt;Variable&lt;/th&gt;
</span><span class='line'>  &lt;th&gt;Description&lt;/th&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>  &lt;/thead&gt;
</span><span class='line'>  &lt;tbody&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;paginator.per_page&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;Number of Posts per page.&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;paginator.posts&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;Posts available for that page.&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;paginator.total_posts&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;Total number of Posts.&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;paginator.total_pages&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;Total number of Pages.&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;paginator.page&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;The number of the current page.&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;paginator.previous_page&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;The number of the previous page.&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;paginator.previous_page_path&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;The path to the previous page.&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;paginator.next_page&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;The number of the next page.&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>&lt;tr&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;paginator.next_page_path&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>  &lt;td&gt;&lt;p&gt;The path to the next page.&lt;/p&gt;&lt;/td&gt;
</span><span class='line'>&lt;/tr&gt;
</span><span class='line'>  &lt;/tbody&gt;
</span><span class='line'>&lt;/table&gt;
</span><span class='line'>
</span><span class='line'>]]&gt;&lt;/content&gt;
</span><span class='line'>  &lt;/entry&gt;
</span><span class='line'>  
</span><span class='line'>  &lt;entry&gt;
</span><span class='line'>&lt;title type="html"&gt;&lt;![CDATA[octopress优化]]&gt;&lt;/title&gt;
</span><span class='line'>&lt;link href="http://abcdxyzk.github.io/blog/2014/11/25/octopress-5/"/&gt;
</span><span class='line'>&lt;updated&gt;2014-11-25T23:34:33+08:00&lt;/updated&gt;
</span><span class='line'>&lt;id&gt;http://abcdxyzk.github.io/blog/2014/11/25/octopress-5&lt;/id&gt;
</span><span class='line'>&lt;content type="html"&gt;&lt;![CDATA[&lt;h4&gt;octopress优化&lt;/h4&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;能够让octopress在50篇文章下跑进5s，不优化要跑60s左右&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h5&gt;运行过程&lt;/h5&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;看octopress目录下的Rakefile，里面有generate，preview，watch等。&lt;br/&gt;
</span><span class='line'>输入rake generate是就是按照Rakefile中&lt;code&gt;task :generate do&lt;/code&gt;执行的。&lt;br/&gt;
</span><span class='line'>最主要的两条：
</span><span class='line'>&lt;code&gt;
</span><span class='line'>system "compass compile --css-dir #{source_dir}/stylesheets"
</span><span class='line'>system "jekyll build"
</span><span class='line'>&lt;/code&gt;
</span><span class='line'>第一条是编译css，第二条是生成文章。&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;!--more--&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;p&gt;第一条不知道如何优化，略过。&lt;br/&gt;
</span><span class='line'>第二条接着执行到&lt;br/&gt;
</span><span class='line'>/usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/commands/build.rb&lt;br/&gt;
</span><span class='line'>文件的init_with_program -&gt; process -&gt; build然后到&lt;br/&gt;
</span><span class='line'>/usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/command.rb文件的process_site然后到&lt;br/&gt;
</span><span class='line'>/usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/site.rb文件的process，&lt;br/&gt;
</span><span class='line'>process代码如下：
</span><span class='line'>&lt;code&gt;
</span><span class='line'>47     def process
</span><span class='line'>48       reset
</span><span class='line'>49       read
</span><span class='line'>50       generate
</span><span class='line'>51       render
</span><span class='line'>52       cleanup
</span><span class='line'>53       write
</span><span class='line'>54     end
</span><span class='line'>&lt;/code&gt;
</span><span class='line'>这里的函数都在这个文件里，主要费时在generate和render。&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h6&gt;1. generate&lt;/h6&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;generate会执行octopress/plugins目录下的tag_generator.rb和category_generator.rb，&lt;br/&gt;
</span><span class='line'>这两个文件的write_tag_indexes和write_category_indexes分别回构建tag和category的分类首页。&lt;br/&gt;
</span><span class='line'>所以tag和category越多构建越慢。
</span><span class='line'>&lt;code&gt;
</span><span class='line'>from /home/kk/kk/github/octopress/plugins/rubypants.rb:261:in `to_html'
</span><span class='line'>from /home/kk/kk/github/octopress/plugins/octopress_filters.rb:31:in `post_filter'
</span><span class='line'>from /home/kk/kk/github/octopress/plugins/octopress_filters.rb:41:in `post_render'
</span><span class='line'>from /usr/local/lib/ruby/gems/2.1.0/gems/octopress-hooks-2.2.1/lib/octopress-hooks.rb:255:in `block in post_render'
</span><span class='line'>from /usr/local/lib/ruby/gems/2.1.0/gems/octopress-hooks-2.2.1/lib/octopress-hooks.rb:254:in `each'
</span><span class='line'>from /usr/local/lib/ruby/gems/2.1.0/gems/octopress-hooks-2.2.1/lib/octopress-hooks.rb:254:in `post_render'
</span><span class='line'>from /usr/local/lib/ruby/gems/2.1.0/gems/octopress-hooks-2.2.1/lib/octopress-hooks.rb:224:in `do_layout'
</span><span class='line'>from /usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/page.rb:122:in `render'
</span><span class='line'>from /home/kk/kk/github/octopress/plugins/category_generator.rb:100:in `write_category_index'
</span><span class='line'>from /home/kk/kk/github/octopress/plugins/category_generator.rb:112:in `block in write_category_indexes'
</span><span class='line'>from /home/kk/kk/github/octopress/plugins/category_generator.rb:111:in `each'
</span><span class='line'>from /home/kk/kk/github/octopress/plugins/category_generator.rb:111:in `write_category_indexes'
</span><span class='line'>from /home/kk/kk/github/octopress/plugins/category_generator.rb:141:in `generate'
</span><span class='line'>from /usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/site.rb:280:in `block in generate'
</span><span class='line'>from /usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/site.rb:279:in `each'
</span><span class='line'>from /usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/site.rb:279:in `generate'
</span><span class='line'>from /usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/site.rb:50:in `process'
</span><span class='line'>&lt;/code&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h6&gt;2. render&lt;/h6&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;    from /home/kk/kk/github/octopress/plugins/rubypants.rb:261:in `to_html'
</span><span class='line'>from /home/kk/kk/github/octopress/plugins/octopress_filters.rb:31:in `post_filter'
</span><span class='line'>from /home/kk/kk/github/octopress/plugins/octopress_filters.rb:41:in `post_render'
</span><span class='line'>from /usr/local/lib/ruby/gems/2.1.0/gems/octopress-hooks-2.2.1/lib/octopress-hooks.rb:249:in `block in pre_render'
</span><span class='line'>from /usr/local/lib/ruby/gems/2.1.0/gems/octopress-hooks-2.2.1/lib/octopress-hooks.rb:248:in `each'
</span><span class='line'>from /usr/local/lib/ruby/gems/2.1.0/gems/octopress-hooks-2.2.1/lib/octopress-hooks.rb:248:in `pre_render'
</span><span class='line'>from /usr/local/lib/ruby/gems/2.1.0/gems/octopress-hooks-2.2.1/lib/octopress-hooks.rb:222:in `do_layout'
</span><span class='line'>from /usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/page.rb:122:in `render'
</span><span class='line'>from /usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/site.rb:299:in `block in render'
</span><span class='line'>from /usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/site.rb:298:in `each'
</span><span class='line'>from /usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/site.rb:298:in `render'
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;都是慢在octopress/plugins/rubypants.rb的to_html函数。&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h5&gt;优化&lt;/h5&gt;
</span><span class='line'>
</span><span class='line'>&lt;h6&gt;1、to_html函数的tokenize和gsub很慢。&lt;/h6&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;to_html函数只是把一些' &ldquo;之类的转成html，试了一下不执行to_html，diff出来差别不大，页面上显示也都还OK。单纯的&lt;在其他地方已经转好了。&lt;br/&gt;
</span><span class='line'>所以octopress/plugins/octopress_filters.rb中不执行to_html&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h6&gt;2、每次计算侧边栏太慢&lt;/h6&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;所有页面都是按照其layout的格式找对应source/_layout/下的模板来生成的。&lt;br/&gt;
</span><span class='line'>注意post.html和page.html的最后都有 &lt;code&gt;{ { include_array XXX } }&lt;/code&gt;, 这就是说每个页面都要运行plugins/include_array.rb中的render(context)来生成侧边栏。&lt;br/&gt;
</span><span class='line'>但是侧边栏应该是(?)都一样的。所以改成隔一定时间计算一次
</span><span class='line'>&lt;code&gt;
</span><span class='line'> 26     @@caltime = 0
</span><span class='line'> 27     @@retstore = ""
</span><span class='line'> 28     def render(context)
</span><span class='line'> 29         if Time.now.to_f - @@caltime &lt; context.registers[:site].config['recaltime']
</span><span class='line'> 30                 return @@retstore;
</span><span class='line'> 31         end
</span><span class='line'> 32         @@caltime = Time.now.to_f
</span><span class='line'>...
</span><span class='line'> 58       @@retstore = rtn
</span><span class='line'>&lt;/code&gt;
</span><span class='line'>为什么要隔一段时间？因为在preview中有改动任何文件就会重新生成一次，这时侧边栏也要重新计算&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h6&gt;3、减小文件大小&lt;/h6&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;我的侧边栏有二级目录，整个侧边栏比较大，50篇时已经有20k。所以将侧边栏独立成一个文件，用js来load。&lt;br/&gt;
</span><span class='line'>plugins/include_array.rb中加：
</span><span class='line'>&lt;code&gt;
</span><span class='line'>59       fp = File.new('sidebar.html', 'w');
</span><span class='line'>60       fp.puts(rtn);
</span><span class='line'>61       fp.puts('&lt;script src="http://abcdxyzk.github.io/javascripts/category.js" type="text/javascript"&gt;&lt;/script&gt;');
</span><span class='line'>62       fp.puts('&lt;script type="text/javascript"&gt; hadOpenDiv();&lt;/script&gt;');
</span><span class='line'>63       fp.close();
</span><span class='line'>&lt;/code&gt;
</span><span class='line'>source/&lt;em&gt;layout/post.html和source/&lt;/em&gt;layout/page.html的最后部分改成：
</span><span class='line'>&lt;code&gt;
</span><span class='line'>35 &lt;aside class="sidebar" id='load_sidebar'&gt;
</span><span class='line'>36 &lt;/aside&gt;
</span><span class='line'>37 &lt;script type="text/javascript"&gt;
</span><span class='line'>38   $('#load_sidebar').load('/sidebar.html');
</span><span class='line'>39 &lt;/script&gt;
</span><span class='line'>&lt;/code&gt;
</span><span class='line'>因为source/index.html里也有 &lt;code&gt;{ { include_array XXX } }&lt;/code&gt;，所以不用担心不执行plugins/include_array.rb。&lt;br/&gt;
</span><span class='line'>问题1：就是"最近评论"要从_config.yml中的default_asides:中移到source/index.html中。因为js load进的文件中的document.write不执行了。这也就是为什么source/index.html不采用js load。如果是&lt;code&gt;&lt;aside&gt;&lt;/code&gt;中增加div用来load的话，侧边栏缩到底部就没有三列的效果。&lt;br/&gt;
</span><span class='line'>问题2：sidebar.html要写到主目录，source/sidebar.html中用ln软链接到sidebar.html。因为如果在watch状态直接写到source/目录的话，他就会再次认为文件有改变，又重新生成。造成在不断生成的死循环。细节是在Rakefile文件的generate和preview中先加软链接再运行其他
</span><span class='line'>&lt;code&gt;
</span><span class='line'>56 task :generate do
</span><span class='line'>57   system('&gt;`pwd`/sidebar.html')
</span><span class='line'>58   system('ln -f -s `pwd`/sidebar.html `pwd`/source/sidebar.html')
</span><span class='line'>&lt;/code&gt;&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h5&gt;优化效果&lt;/h5&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;在文件中加入时间输出代码
</span><span class='line'>&lt;code&gt;
</span><span class='line'>p "    #{ __FILE__} line:#{__LINE__} time:#{Time.now.to_f}"
</span><span class='line'>&lt;/code&gt;
</span><span class='line'>50篇文章，40个tag，61个category，运行如下：</span></code></pre></td></tr></table></div></figure>
kk@kk-laptop:~/kk/github/octopress(source)$ rake generate</p>

<h2>Generating Site with Jekyll</h2>

<p>&ldquo;/home/kk/kk/github/octopress/Rakefile line:62 time:1416933869.1204205&rdquo;
identical source/stylesheets/screen.css
&ldquo;/home/kk/kk/github/octopress/Rakefile line:64 time:1416933870.019113&rdquo;
Configuration file: /home/kk/kk/github/octopress/_config.yml
            Source: source
       Destination: public
      Generating&hellip;
&ldquo;    /home/kk/kk/github/octopress/plugins/category_generator.rb line:110 time:1416933870.7509217&rdquo;
&ldquo;    /home/kk/kk/github/octopress/plugins/category_generator.rb line:114 time:1416933871.8838022&rdquo;
&ldquo;    /home/kk/kk/github/octopress/plugins/tag_generator.rb line:93 time:1416933871.8838577&rdquo;
&ldquo;    /home/kk/kk/github/octopress/plugins/tag_generator.rb line:97 time:1416933872.389736&rdquo;
&ldquo;    /usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/site.rb line:297 time:1416933872.4271524&rdquo;
&ldquo;    /usr/local/lib/ruby/gems/2.1.0/gems/jekyll-2.5.1/lib/jekyll/site.rb line:301 time:1416933873.8506286&rdquo;
                    done.
 Auto-regeneration: disabled. Use &ndash;watch to enable.
&ldquo;/home/kk/kk/github/octopress/Rakefile line:66 time:1416933873.9671116&rdquo;
&ldquo;total = 4.846851825714111&rdquo;
```
total = 4.846851825714111，不优化要60s左右。</p>
]]></content>
  </entry>
  
</feed>
