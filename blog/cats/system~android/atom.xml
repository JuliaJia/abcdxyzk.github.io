<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: system~android | kk Blog —— 通用基础]]></title>
  <link href="http://abcdxyzk.github.io/blog/cats/system~android/atom.xml" rel="self"/>
  <link href="http://abcdxyzk.github.io/"/>
  <updated>2014-12-23T01:47:18+08:00</updated>
  <id>http://abcdxyzk.github.io/</id>
  <author>
    <name><![CDATA[kk]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[moto sbf包]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/12/22/android-sbf/"/>
    <updated>2014-12-22T22:15:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/12/22/android-sbf</id>
    <content type="html"><![CDATA[<p>解出的CG35.smg或CG35.img是boot.img, boot.img可以按照 <a href="/blog/2014/12/22/android-img/">这里</a> 的方式编辑</p>

<p><span style="color:red">注意： motorola只有一些新的机型有方法解bootloader锁，沒解锁的bootloader会验证boot、recovery等分区的完整性（两个分区都是8M），不管有用的数据还是没用的数据都加入验证（好像是隔段距离取点数据做验证，因为替换最后100字节可以刷成功，替换多点就失败。可是实际有用的boot.img大小才4M左右）。</span></p>

<p>MOTO X解BL锁教程  <a href="http://bbs.gfan.com/android-6726986-1-1.html">http://bbs.gfan.com/android-6726986-1-1.html</a></p>

<h4>1 命令行解包</h4>

<pre><code>./sbf_flash -x OLYFR_U4_1.8.3_SIGNED_OLPSATTSPE_P013_HWolympus_1g_Service1FF.sbf
</code></pre>

<p>提取到一堆img文件</p>

<h4>2神器：MotoAndroidDepacker</h4>

<p><a href="http://www.veryhuo.com/down/html/47416.html">http://www.veryhuo.com/down/html/47416.html</a></p>

<p>就是这个软件，可以把moto的底包解开。<br/>
使用很简单：<br/>
1 点open from file菜单打开sbf底包，然后点split to files就解开了<br/>
2 将要打包的文件拷到单独的文件夹A，然后点open files，选择刚刚的文件夹A，然后点compile file，就会在文件夹A里面生成result\firmware.sbf文件</p>

<p>解包出的文件解释：
<code>
CG31/CDT是描述各文件版本号的, 相当于注释文件
CG33/CDROM是个ISO文件, 可以用WinRAR之类的打开, 包含PC端程序(MotoHelperAgent)
CG35/Boot包含了系统内核&lt;-boot-only就是这个
CG39/system分区
CG40/cache缓存分区(国行多余的部分), 显然里面什么都没有
CG45/Baseband基带固件
CG47/Recovery就是官方恢复, 里面也包含独立的内核, 但不用于启动
CG61/devtree包含设备描述符
RAMDLD/RamDisk&amp;tmpfs, Android/Linux启动初始化的一部分, 不涉及具体设备
</code></p>

<p>这篇感觉没用 <a href="http://bbs.ihei5.com/thread-5883-1-1.html">http://bbs.ihei5.com/thread-5883-1-1.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GT-S5830刷机教程]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/12/22/android-s5830-flash/"/>
    <updated>2014-12-22T22:15:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/12/22/android-s5830-flash</id>
    <content type="html"><![CDATA[<h5>ROM</h5>

<p>(推荐) 三星 S5830 2.3.4 ROM (国行ZCKPB) <a href="http://dl.dbank.com/c0e5aato8l">http://dl.dbank.com/c0e5aato8l</a></p>

<p>2.3.6 ROM S5830DXKT7.tar.zip  <a href="http://dl.vmall.com/c0016n1hza">http://dl.vmall.com/c0016n1hza</a></p>

<h5>工具</h5>

<p>Odin Multi Downloader v4.38.exe <a href="http://dl.dbank.com/c0ijy8bqrr">http://dl.dbank.com/c0ijy8bqrr</a>
记得装USB驱动</p>

<h3>教程</h3>

<p>[贴自] <a href="http://samsungbbs.cnmo.com/thread-10414540-1-1.html">http://samsungbbs.cnmo.com/thread-10414540-1-1.html</a></p>

<h4>1</h4>

<p>按HOME + 电源键进入recovery模式，双wipe</p>

<h4>2</h4>

<p>电源键+HOME键+音量调节下键 ， 两次出现三星log后会进入downloading模式</p>

<h4>3</h4>

<p>将手机与电脑通过USB数据线相连，然后运行刷机平台Odin Multi Downloader v4.38.exe</p>

<p><img src="/images/system/2014-12-22-1.jpg" alt="" /></p>

<pre><code>
  CSC：全称Customer Specific Customization，里面包含的是运营商数据，不同ROM对应的区域不一样，所以CSC文件也不会相同。
　　PDA：里面是CODE、ANDROID本身和所有的软件运行依靠的代码。
　　PHONE：又称为MODEM，就是基带的意思，是所有通讯模块正常运行的依靠，机带情勿要随便升级替换。
　　OPS：其实不是刷到手机中的文件，而是一个奥丁工具用来刷机的配置文件， 里面记录的是手机各个分区的信息。刷机的时候，奥丁依据这个配置将rom内的分区镜像恢复到指定分区中。如果勾选了“重新分区”，则依据这个配置重新分配分区。
</code></pre>

<h4>4</h4>

<p>选择对应的包</p>

<p><img src="/images/system/2014-12-22-2.jpg" alt="" /></p>

<pre><code>1、点击OPS命令按钮，浏览选择 Cooper_v1.0.ops    
2、点击BOOT命令按钮，浏览选择 APBOOT_S5830****_CL382966_REV03_user_low_true.tar  
3、点击Phone命令按钮，浏览选择 MODEM_S5830****_CL382966_REV03.tar  
4、点击PDA命令按钮，浏览选择 CODE_S5830****_CL382966_REV03_user_low_true.tar  
5、点击CSC命令按钮，浏览选 CSC_GT-S5830S5830O****_CL382966_REV03_user_low_true.tar  
</code></pre>

<p><span style="color:red">注意：可以只有OPS和PDA，PDA里面也可以只有boot.img。替换别的包刷的话最好保持原来包文件名的部分前缀，不然会提示“invalid image type”</span></p>

<hr />

<h2>独立包的刷包方式</h2>

<p>因为独立包只有一个，看起来还是比较简单的。只用放一个包就好了。<br/>
在刷之前确认格式是不是tar格式，名称里面有没有home。</p>

<p><img src="/images/system/2014-12-22-3.jpg" alt="" /></p>

<p>如果有在双击这个ROM，可以进入到压缩包里面，看到这些文件。基本上确认这个包可以刷了。</p>

<p>OPS放好之后，看这里。这3个勾一定打上,</p>

<p><img src="/images/system/2014-12-22-4.jpg" alt="" /></p>

<p>3个勾打上之后，就只有这里面才能放包了，其他都不行</p>

<p><img src="/images/system/2014-12-22-5.jpg" alt="" /></p>

<hr />

<h4>刷好之后是这样</h4>

<p><img src="/images/system/2014-12-22-6.jpg" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[samsung rfs、tar包]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/12/22/android-rfs-tar/"/>
    <updated>2014-12-22T22:15:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/12/22/android-rfs-tar</id>
    <content type="html"><![CDATA[<p>boot.img可以按照 <a href="/blog/2014/12/22/android-img/">这里</a> 的方式编辑</p>

<p>GT-S5830分区
<code>
bml1 mibib
bml2 qcsbl
bml3 oemsbl
bml4 amms
bml5 ????????FSR_STL
bml6 ????????FSR_STL / Empty|Empty RFS Partition???
bml7 arm11boot
bml8 Boot.img
bml9 Recovery.img
bml10 Looks like kernel init?????Contains this string:"em=330M console=NULL hw=5 fbaddr=0xb0000"
bml11 Empty partion no partion table?? Whole file FF
bml12 System.rfs
bml13 Data Partition
bml14 Cache Partition
</code></p>

<p>把所有要打包进ROM的文件都复制到这个文件夹内；<br/>
比如：这些刷机文件包括：boot.img
<code>
   $ tar -cf NewRom.tar boot.img
   $ md5sum -t NewROM.tar &gt;&gt; NewROM.tar
   $ mv NewROM.tar NewROM.tar.md5
</code>
第一句是TAR打包，第二句是md5签名，第三句是改文件名，可以省略。</p>

<p>NewROM.tar.md5就是最后生成的，可供刷机用的ROM了！</p>

<h4>编辑 rfs</h4>

<p>挂载 RFS文件factoryfs.rfs 为一个磁盘：
<code>
    # su
    # mount –o loop factoryfs.rfs System
</code>
进入“磁盘”System目录，你就可以看到factoryfs.rfs解包后的所有内容。</p>

<p>修改好/System的内容后，在超级用户终端执行下面的语句卸载该“磁盘” ，这个操作等价于“打包”过程。
<code>
    # umount System
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ME722(A953)刷机教程]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/12/22/android-me722-flash/"/>
    <updated>2014-12-22T22:15:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/12/22/android-me722-flash</id>
    <content type="html"><![CDATA[<h5>ROM</h5>

<p>二楼刷机包 <a href="http://bbs.gfan.com/android-2448659-1-1.html">http://bbs.gfan.com/android-2448659-1-1.html</a></p>

<p>这里的可以直接下 <a href="http://bbs.gfan.com/android-4905385-1-1.html">http://bbs.gfan.com/android-4905385-1-1.html</a></p>

<p>这个包还行 <a href="http://115.com/file/bw6u2lnn">http://115.com/file/bw6u2lnn</a></p>

<h5>工具</h5>

<p>RSDLite5.5汉化版.rar <a href="http://dl.dbank.com/c05d7hs3mo">http://dl.dbank.com/c05d7hs3mo</a></p>

<p>记得装USB驱动</p>

<h3>教程</h3>

<p>[贴自] <a href="http://moto.zol.com.cn/209/295_2084002.html">http://moto.zol.com.cn/209/295_2084002.html</a></p>

<h4>1</h4>

<p>按住X键再按开机键，这时他会出现一个小机器人，按@键 进入recovery模式，双wipe</p>

<h4>2</h4>

<p>手机关机状态先按住拍照键+音量增大键+开机键 进入bootloader模式</p>

<h4>3</h4>

<p>把手机与电脑通过USB线相连，并打开RSD刷机工具，如图</p>

<p><img src="/images/system/2014-12-22-11.jpg" alt="" /></p>

<h4>4</h4>

<p>然后选择刚才下载的底包导入，导入后按start开始刷机，直到手机自动开机，开机后请请再次关闭手机，之后再开机。</p>

<p><img src="/images/system/2014-12-22-12.jpg" alt="" /></p>

<hr />

<p><a href="http://http://anzhuo.paojiao.cn/android/allinfo/1/56998.html">http://http://anzhuo.paojiao.cn/android/allinfo/1/56998.html</a></p>

<p>首先我们要明确，就是BL等级一旦升上去，就再也不能降下来了。</p>

<p>如果降刷，导致的必然结果就是黑屏不能开机，甚至连红色LOGO都看不到，也看不到开机键+音量上的刷机界面。</p>

<p>遇到这种情况，只能通过用RSD盲刷BL和原来一样的底包，来重新开机。</p>

<p>盲刷的具体方法是：</p>

<p>1.拔下电池</p>

<p>2.按住音量加，同时放入电池</p>

<p>3.连接数据线</p>

<p>4.打开RSD，直到RSD识别到手机</p>

<p>5.刷你上次刷的底包去吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[img格式]]></title>
    <link href="http://abcdxyzk.github.io/blog/2014/12/22/android-img/"/>
    <updated>2014-12-22T22:15:00+08:00</updated>
    <id>http://abcdxyzk.github.io/blog/2014/12/22/android-img</id>
    <content type="html"><![CDATA[<p>备份系统中img：dd if=/dev/block/mmcblk0p2 of=/sdcard/boot.img，回车，可得boot.img。</p>

<h4>工具</h4>

<pre><code>git clone https://github.com/AndroidRoot/BootTools.git BootTools
cd BootTools
make
</code></pre>

<h4>过程</h4>

<pre><code>    # 解压得到 kernel 和 ramdisk，解出来的boot.img-kernel.gz就是zImage
    ./unpack-bootimg.sh boot.img

    # 可以编辑boot.img-ramdisk，编辑好后打包：
    cd boot.img-ramdisk
    find . | cpio -o -H newc | gzip &gt; ../ramdisk-repack.cpio.gz 

    # 查看应加载地址
    ./hdrboot boot.img

    # 重新打包img
    ./mkbootimg --kernel zImage --ramdisk boot.img-ramdisk.cpio.gz --base 13600000 --ramdisk_offset FF8000 --pagesize 4096 -o new_boot.img

    # 查看新加载地址
    ./hdrboot new_boot.img
</code></pre>

<h4>注意</h4>

<p>打包后的文件用hdrboot看到的一些addr值要和原来一样，一些size的则无所谓</p>
]]></content>
  </entry>
  
</feed>
