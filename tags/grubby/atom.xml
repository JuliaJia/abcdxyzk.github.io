<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
<title><![CDATA[Tag: grubby | kk Blog —— 通用基础]]></title>
<link href="http://abcdxyzk.github.io/tags/grubby/atom.xml" rel="self"/>
<link href="http://abcdxyzk.github.io/"/>
<updated>2014-11-22T01:36:23+08:00</updated>
<id>http://abcdxyzk.github.io/</id>
<author>
<name><![CDATA[kk]]></name>

</author>
<generator uri="http://octopress.org/">Octopress</generator>

<entry>
<title type="html"><![CDATA[grubby edit centos grub args]]></title>
<link href="http://abcdxyzk.github.io/blog/2014/10/24/command-grubby/"/>
<updated>2014-10-24T15:57:00+08:00</updated>
<id>http://abcdxyzk.github.io/blog/2014/10/24/command-grubby</id>
<content type="html"><![CDATA[<p>In Debian/Ubuntu, grub.cfg is fully generated by scripts and any manual changes made to it will be clobbered. In RHEL/CentOS however, grub.cfg is modified by scripts but manual changes are persisted, and is actually the canonical location for certain settings.</p>

<p>The tool which manages grub.cfg is grubby, which is called by /sbin/new-kernel-pkg when kernels are installed or removed. The &ndash;copy-default parameter is passed to grubby when a new kernel is installed, which causes it to copy the kernel parameters from the current default kernel. Setting the default kernel parameters for future-installed kernels is therefore done by editing the entry for the default kernel in grub.cfg.</p>

<p>If you weren&rsquo;t automating this you could simply edit grub.cfg manually and change all the current kernel entries. However, you can use grubby to modify grub.cfg in order to avoid parsing it or writing regular expressions. For example, this will remove the rhgb and quiet parameters from the specified kernel version.</p>

<pre><code>$ grubby --update-kernel=/boot/vmlinuz-2.6.32-220.13.1.el6.x86_64 --remove-args="rhgb quiet"
</code></pre>

<p>There doesn&rsquo;t seem to be an option to list the currently configured kernels however, so you&rsquo;ll have to discover these another way. One option is to just look for vmlinuz files in /boot/:</p>

<pre><code>#!/bin/sh
for KERNEL in /boot/vmlinuz-*; do
    grubby --update-kernel="$KERNEL" --remove-args="rhgb quiet"
done
</code></pre>
]]></content>
</entry>

</feed>
